[{"title":"汇编简介","date":"2019-04-24T09:05:35.000Z","path":"2019/04/24/汇编简介/","text":"微机原理简介 汇编的概念及特性 汇编语法 关键字 微机原理简介计算机的基本组成是： cpu:信息处理单元，内含有寄存器 存储器：存储数据 输入输出设备 总线：连接上述各个部分 计算机程序的执行者是cpu,数据和程序存放的位置是存储器，连接各个设备的是总线，所以编写程序要站在cpu的角度来思考问题。 cpu要处理数据，就要从存储器中读取，这时候就需要知道数据存储在存储器中的位置，通过地址来找到要处理的数据。对于多个外部的存储设备，都被cpu看成是统一的内存地址空间，通过地址总线进行寻址，但是有时候cpu的寄存器的位数不够，需要的地址空间没法一次性存在一个寄存器里，所以就需要用段地址和偏移地址两个寄存器来表示地址。 汇编的概念及特性汇编语言是低级语言，可以直接操作硬件，仅仅比机器码稍微高级一点，是二进制指令的文本形式（汇编语言和机器指令是一一对应的关系），主要是和硬件操作密切相关时才使用，其他情况还是采用C语言比较好。汇编语言可以单独编写，也可以嵌入在C语言文件内混合编写。 汇编的优点: 可直接访问、操作硬件； 对关键代码进行更准确的控制，免受编译器限制 对代码实现最佳的优化，提高运行速度； 最大限度发挥硬件的功能。 汇编的缺点： 代码不易阅读，难以维护 容易出错，难以调试 代码与硬件平台相关； 开发效率低 汇编语法当前的语法主要有Intel风格和AT&amp;T风格两种汇编格式。当采用不同的编译器时，对应的语法也略有不同，本文采用的汇编编译器是NASM,这是一个免费的语法风格类似于Intel风格的汇编编译器。 一条指令的基本组成是: 标签 ： 操作指令 操作数 ； 注释 上述的六个部分，主要是操作指令和操作数，其他部分都是可选的；操作指令是助记符，操作数可以使寄存器、内存和立即数等。 关键字以点开头的指令不是助记符，只是一些给汇编器的伪命令。 dd db dw 用来定义不同的字节类型变量，占用空间存放数据 例： db 0x11 ; 在汇编代码的当前位置放一个字节的数0x11 .global 用来让一个符号对链接器可见,使其他模块可以使用，符号必须在这条命令之后进行定义。 例： .global _main ；声明可被其他模块识别的符号_main EXTERN 从其他模块导入符号 SECTION 改变正在编写的代码将被编入的段 例： SECTION .text ;申明接下来的代码被编入代码段 equ 用来定义符号 例： msg equ ‘itisamessage’ ;定义了一个字符串 $ ;这个符号表示当前行的地址 $$ ;这个符号表示当前段的地址 ORG 指定其后指令的内存地址的偏移 例： ORG 0x100 ; CALL，就会跳转到函数的部分执行; RET就会回到调用CALL的地方;","tags":[{"name":"语法","slug":"语法","permalink":"https://blackdusts.github.io/tags/语法/"},{"name":"汇编","slug":"汇编","permalink":"https://blackdusts.github.io/tags/汇编/"},{"name":"nasm","slug":"nasm","permalink":"https://blackdusts.github.io/tags/nasm/"}]},{"title":"makefile文件","date":"2019-04-24T08:50:18.000Z","path":"2019/04/24/makefile文件/","text":"为什么要使用makefile文件 makefile文件的基本形式 显式规则 变量的定义 注释 为什么要使用makefile文件在大型项目编译多个文件的时候，在命令行中多次输入命令显得不太方便，将命令写到文件里，可以简化这个过程。makefile文件通过规则来定义文件之间的依赖关系，实现自动化编译。 对于编译，为了提高编译效率，需要满足的要求如下： ＋ 未被编译的工程，所有源文件需要进行编译和链接＋ 部分源文件被修改，则只编译修改过的文件，并重新链接＋ 头文件被修改，则引用过该头文件的源文件需要重新编译链接 makefile文件的基本形式makefile文件中大致有如下几种类型的成分： 显式规则变量定义文件指示注释 显式规则makefile的显式规则写法如下： 目标文件: 依赖文件 命令 生成目标文件需要依赖文件的存在，如果依赖文件中有任意一个文件比目标文件更加地新，则命令就要被执行，以重新生成目标文件。而依赖文件又可以作为目标文件，由其他的依赖文件来生成。这里的命令就是那些用gcc、nasm、ld等编译链接工具执行的命令，这个命令一定要以tab键开头。 对于文件的使用，只要在含有makefile文件的目录下，使用make命令就可以执行文件内的命令。程序会迭代地分析目标文件和依赖文件之间的新旧程度来判断是否执行命令，如果依赖文件不存在，则会去寻找对应生成依赖文件的那条规则，如果有最终的依赖文件无法找到，则会报错，显示编译失败。 在makefile文件中还有另外一种格式的语法，如下： 标签： 命令 这里的标签只是给了下面的命令取了一个别名而已，不过这句命令不会被隐式地执行，显示调用的方法如下: make 标签 当然，为了防止这个不生成目标文件的标签和工程中的文件重名而导致无法运行这条命令，可以显示指明这是一个伪目标。 变量的定义一个依赖文件会在makefile文件的多个地方出现，在大的工程里面，添加了一个文件之后需要对多处进行修改，容易出错，如果把文件名定义成变量，那么只要修改变量的值，就可以不用在出现文件名的每个地方都进行修改了。变量的申明形式如下所示: 变量名 ＝ 文件名 使用变量的方式是在每次使用文件名的时候，用$(变量名)来表示。 注释采用＃作为注释的启始符号，只能进行单行注释。 注意：如果要求不显示命令，则在命令前面加@为了防止命令的执行错误导致make退出，需要在命令之前加上－，用来表示即使命令执行失败，也不影响其他命令的执行，不会使make命令退出。","tags":[{"name":"makefile","slug":"makefile","permalink":"https://blackdusts.github.io/tags/makefile/"},{"name":"编译","slug":"编译","permalink":"https://blackdusts.github.io/tags/编译/"},{"name":"依赖","slug":"依赖","permalink":"https://blackdusts.github.io/tags/依赖/"},{"name":"标签","slug":"标签","permalink":"https://blackdusts.github.io/tags/标签/"},{"name":"规则","slug":"规则","permalink":"https://blackdusts.github.io/tags/规则/"}]},{"title":"ELF文件和ld链接脚本","date":"2019-04-24T08:47:31.000Z","path":"2019/04/24/ELF文件和ld链接脚本/","text":"程序的基本处理过程 ELF文件格式 ELF文件分类 ELF文件作用 ELF文件结构 链接脚本 链接过程 链接脚本的功能 链接脚本基础 关键字ENTRY 关键字SECTIONS 程序的基本处理过程从源代码开始到形成可执行文件，需要经过预处理、编译、汇编、链接几个步骤。（这里主要是针对c语言程序）编译器主要是把源代码翻译成中间语言，这里是汇编语言，然后用汇编成目标文件，最后目标文件被链接器处理生成可执行文件。 ELF文件格式编译器生成的文件叫目标文件，当前常见的是windows下的PE格式文件和Linux下的ELF格式文件。 ELF文件分类其中ELF目标文件可以分为如下三类： 可重定位文件 这种文件可以作为链接器的输入，用来生成可执行文件或是共享文件。 可执行文件 共享文件 这种文件可以被可执行那个文件或其他共享文件调用。 ELF文件作用由上面分类可知，ELF文件主要参与程序的链接和程序的执行过程。在链接过程中，ELF文件被看做是节(section)的集合，所有的节由节头表描述。在程序执行过程中，ELF文件被看成是段的集合，由程序头表描述。 ELF文件结构ELF文件主要由以下４部分组成： ELF Header 指明该文件的属性信息，如该文件的类型，节头表和段头表在该文件的位置等信息。 Program Header table 段头表和创建进程有关，描述了连续的几个节在文件中的位置、大小以及放到内存后的位置和大小。用于构建进程映像的目标文件必须有段头表，而可重定向的目标文件不需要段头表。 Section 编译后的目标文件至少有３个节区： .text 代码段，存放程序执行代码的一块区域； .data 数据段，存放程序中已经初始化的全局变量的区域； .bss bbs段，存放程序中未初始化的全局变量的区域； Section header table 节头表描述了该文件中各个节区的名称，大小以及在文件的位置等信息。用于链接的文件必须要有节头表，其他的目标文件可以不要节头表。 链接脚本链接过程链接过程主要完成两件事：符号解析和重定位。 符号解析 找到当前文件中未定义符号在共享文件中的位置。 重定位 确定各个函数加载到内存中的运行地址。 链接脚本的功能程序的链接过程是由链接脚本控制的，基本上只完成两个操作： 输入文件中的section如何映射到输出文件； 控制输出文件的内存分布； 默认情况下，链接器会使用默认的链接脚本，用参数-T参数可以指定自己的链接脚本。通常链接器的输入是编译器或汇编器输出的.o目标文件，在Linux平台输出的是ELF格式的目标文件或可执行文件。 链接脚本基础关键字ENTRY将某个符号的地址作为该可执行文件的入口地址，使用方式如下： ENTRY(symbol_name) 关键字SECTIONSSECTIONS命令告诉链接器如何把输入文件中的节映射到输出文件中。下面是一个简单的例子 SECTIONS { . = 0x10000; .text : { *(.text) } } 其中，花括号中的第一行表示把定位器设置在某个地址位置，使得后续的内容从这个地址开始存放。第二行是把所有输入文件中的.text代码段都合并放到输出文件的.text代码段中。","tags":[{"name":"ELF文件","slug":"ELF文件","permalink":"https://blackdusts.github.io/tags/ELF文件/"},{"name":"ld链接脚本","slug":"ld链接脚本","permalink":"https://blackdusts.github.io/tags/ld链接脚本/"}]},{"title":"我的第一段感情故事","date":"2019-04-24T08:35:16.000Z","path":"2019/04/24/我的第一段感情故事/","text":"总是在幻想着那一段感情能够从天而降，解救沉沦在迷茫无趣生活中的我。可是既然机会已经失去，我就应该放弃幻想，从头开始重新战斗了。记录这一段的故事，也只是给心中的奢望画上一个句号罢了。 故事开始于四年前掌上理工大中推出的女生节活动“小幸运”，她发布了希望找一个喜欢阅读的小伙伴的愿望，而我接下了这个愿望。在qq上联系到后，就开始了我们之间的故事。 不记得最早的时候说过哪些话了，但在几个瞬间，让我觉得她是我聊得上话的人，那时她大一，我大四。当她告诉我一会儿要去学线性代数的时候，我凭直觉猜她是理学院的，结果她告诉我只猜对了一半，我纳闷一半是怎么回事，管理学院几个字让我不禁一笑，这姑娘真有趣。我的qq头像是大耳朵图图，很多人在经我提示之后都猜不透我的原因，她却一下子就猜出了我也会动耳神功，感觉真是我的知己。 阅读是我们结缘的开始，那自然少不了谈些各自爱看的书。无奈我一向不学无术，净看些武侠和历史的故事书，而姑娘爱看名著，谈论起来的是季羡林一类作品，我就只能表示佩服，后来难得说到巴金，终于能靠小时候的积累扯上几句，发表些观点，寻找共鸣。可能也是因此，我们后来的第一次线下见面就是在图书馆摆放巴金作品的书架旁。 后来，我们交流也多了起来，其中Ｃ语言成了我们之间经常沟通的话题，在线下也见了好几次面。在图书馆一起自习，去梅岭看梅花，在图书馆到南湖宿舍的路上散步聊天，虽然没几次，但是好歹算是熟络起来了一点。尽管每次我表面显得很平淡，心里却还是蛮紧张的，这也导致一向胃口还好的我，在和她一起在南湖吃饭时总是吃不完碗里的饭菜。 渐渐地，了解到姑娘一身正气，热爱学习，对生活有激情，灵动活泼充满阳光。（我也不知道我为什么会用这些个词来形容，但就是给我这样的感觉）这对于我而言，刚好形成了反差，因为我这个人向来自卑，整个人显得有些颓，满觉是向外散发负能量的那种。虽然我个人显得消极，但是内心是向往阳光的，这是真的，所以我对这个姑娘是羡慕、崇拜的感觉。 所以，在刚认识的那一年里，我们的互动还是蛮多的，姑娘在这个过程中经历一段感情之后，突然换了一个和我一样的qq头像，这让我觉得小姑娘似乎意图不轨。之后，我们之间的聊天变得很频繁，甚至是一些我觉得有点暧昧的话题。然而，一向自卑的我是仰望姑娘的，所以只是线上火热，其他的都装作不知道。（这可能是我孤独的原因） 知道了姑娘喜欢旅游，玩过祖国的好多地方（与我没见过世面的形象形成鲜明对比），正在学习日语，还去过日本游玩；喜欢西安，希望去西安的学校深造；喜欢写日记，写诗，曾经在校报上看到过她的作品。整一个充满能量，积极向上的形象，让我愈发地佩服，却只敢远远地看着，隔着屏幕才能有好好说话的勇气。 不记得是因为什么，我觉得可能是我一直回避的态度，两人的话相对地少了，然后是我离开武汉去深圳实习，我们之间的交流就中断了。不记得是不是在实习期间，你告诉我，你要清空聊天记录了，你要换头像了，我都不知道该怎么回复，只能以“哦”来表示知道了。似乎，两人的故事就此结束了，直到我回到武汉。 心动的开始是源于图书馆的一次偶然相遇，那天我在图书馆的新书区随意溜达，试图找一本消遣的故事书，低头看到在书架侧边的临时书车上有一本名为《程序员之死》的书，于是拿了起来。抬头的那一瞬间，看到了书架一侧朝这边对视的双眼，我们就这样不期而遇了。 她手上拿了一堆的书，还是日语的原著小说，看了眼我手中的《程序员之死》，告诉我她看过这本书了，并不推荐我看。就这样，我手上拿着她借的书，跟在她背后，具体说了什么现在已经不记得了，但是我感觉这是恋爱的味道。也不记得之后是如何分开的，是在图书馆门口还是一起在食堂吃饭之后，但是一向自卑，怂得不敢有非分之想的我，心里开始有些蠢蠢欲动了。 事态的转变出现在一次聊天之后，那天在聊天的过程中，她给我发了一个网络用语“缘封不动”。这个词，我至今没弄明白，这到底是在自嘲自己个人的缘分没有到来，还是在说两个人之间的缘分没有进展。很显然，我误以为她的意思是后者，所以在内心挣扎了一会儿之后，决定向她表露自己的意思。 具体的文字已经找不到了，但是内容主要是，事情的起因——“缘封不动”；感情的回顾——“之前的故事”；此时的意图——“我喜欢你”；我提的要求——“不要回复”。 现在回想，总结一下此次失败的原因有这样几点：首先一点是，没有好好准备文字，导致表达的主旨不准确，主要表现在此次消息的目的是表明我喜欢她的立场，以及我准备向她展开追求的意图。其中关于“喜欢”的立场已经通过几个简单的字眼表现出来，但是却没有表示出我即将对她展开追求的内容，导致她可能误以为我要她回应对我的态度，这层误会是我认为此次很失败的一个地方。第二点，是我在消息中明确说不要求她回应我，这是个极大的错误，因为本来的消息是表露心迹后展开追求行动的开战书，结果在我既没有写出即将追求意图，又要求不回复的措辞下，把这层意思变成了感情是否能走到一起的判决书，这是个大大的误会。当然我并不清楚她当时的想法，但我在事后想来，这个误会是如今结果的一大原因。第三点，关于提及以前的往事，如果是叙旧还行，但是一些自以为是的想法就不可取，更别提自以为曾经的机会了。第四点，关于要求不答复这个问题，我的出发点是不希望两个人难堪，所以希望通过她的反应自己猜测解决，可是却不仅导致了误会，也把自己又自卑又怂的本性暴露出来。 结果不言而喻，但是心动的感觉维持了不甘的决心，所以虽然在此之后一段时间，我不知该如何面对她，怎么和她说话，可是还是陆续发出了见面的邀请，希望一起去看电影啥的。(这里的记忆出现了混乱，好像我受到打击之后就断了联系，之后的邀请和再次决定出击是后面的改换工作地点以后发生的了。)当然了，我觉得前面的误会，导致我不再有机会，之后就慢慢断了联系，两人之间的话少了，朋友圈里的互动也就只剩下看到对方动态后的默默点赞和评论了。 当时刚刚处于手足无措的境地时，我也给自己找好了借口，还没发动就结束的战斗，好在全身而退了嘛，至少没有深陷其中，还是没有太大损失的，还不至于牵肠挂肚茶饭不思的。另外，一个人更加自在，加上现那会儿已经是找工作的时候了，心里有牵挂，就不好回家乡附近工作了，也算是少了一件需要考虑的大事。 差不多在找完工作之后，我们之间也还能和没发生那回事似的继续说上话，当时的她也进入了考研的冲刺阶段（留在武汉的高校深造）。我那会儿签下的公司在上海，而她则会留在武汉继续深造，所以已经不再奢望和她的可能了，甚至在师弟的帮助下，跑到华师去相亲，看看在离开学校之前能不能来段黄昏恋。无奈计划不如变化，秋招的意外打乱了我的算盘。 那时是12月份左右了，我清楚地记得接到公司毁约电话通知的那天，正是我想约华师的姑娘到理工的图书馆看电影的那一天。（可惜那天姑娘有社团活动所以没来。）那天的电影是东野圭吾的《嫌疑人X的献身》，而身边坐的是碰巧也来看电影的隔壁实验室的姑娘，电影才刚开始，这似乎是一个不能算得上美好，但也不差的一个周五夜晚，结果噩耗就那么来了。 换工作的事情搞得我心里一团糟糕，这也是和华师的姑娘失去联系的一个重大原因。（之前的两周，刚和姑娘吃过饭，一起看过电影，算是刚刚认识吧，现在想来还好只是刚认识，应该没有耽误人家吧。）幸运的是，我很快就找到了下家，只是工作地点我只有武汉和深圳两个选择，一开始我在电话里和HR确认说我倾向于去深圳。可是，在签两方协议之前，因为工作地点的变化让我又燃起了和她的希望。如果我选武汉，是不是就还会有新的机会呢，计算在毕业之前不能有结果，在毕业以后我还可以努力努力。虽然在其他朋友问我为什么留武汉而没有去深圳的时候，我都把锅甩给了HR，但是真实的原因是因为她，以及我心里的那一点希望。 在我完成了两方协议的签署后，我再第一时间就把消息告诉了她，还问她，我曾经说过要和她一起打乒乓球、一起逛东湖的承诺有没有机会可以实现，她告诉我随缘吧，这让我觉得还是有希望的，于是我急躁地发动了我的行动，询问可否能陪她一起去南湖食堂吃饭，结果当然是又一次的失败咯，正处于考研冲刺阶段的她怎么能分心呢，所以我就缓了缓我的脚步，等到了考完试以后才再一次地向她发出邀请，希望一起去看南湖图书馆看电影，奇怪的是又没能约上，这就让我感觉到，希望没有了。现在想来，当时太急躁太冲动了，因为此前在我们没有太多沟通的情况下，就贸然提出线下见面的请求，并在被拒绝之后一言不发，这就忽略了我们之前的感情基础已经薄弱，甚至没有感情基础了。长久未曾有过沟通，两人之间已经心有陌生之感，不能再像以前聊得火热时候那样，说见就见的了。（我觉得我写这些字写得有些酸了。）姑娘被我晾了这么久，我连人家是不是单身都不清楚，就蒙头冲上去，这战能不输嘛。 所以，慢慢地，我就不再主动联系人家了，甚至可以说是想避开与她的接触，因为每一次重新的接触都会使我产生幻觉，幻想自己还有机会，然后需要花上好长一段时间来说服自己，别再做梦了。如果总是幻想这一段自己想象的感情，我就不能有一个新的开始，所以，我还是把这一段故事写下来，算是告慰自己，断了念想，开始下一段现实吧。 从上面我总结了自己在感情方面的两个毛病，一个是怂，这是个人太自卑了，由内而外的，一时半会儿是改不了了，具体表现在没有太信任的人，聊天的时候就不会聊到自己个人私事以及自己；另一个就是喜欢晾人家，不主动联系人家，所以也就不主动扩展自己的圈子，面对认识的人也是这样，没事的话就从来不说话，只有到了有事的时候才会联系，还只会聊公事。(还有就是很多的情况是我个人瞎猜脑补的，其实我根本不知道人家姑娘怎么想，也没敢问，其实说了这么多，可能这些都只有我一个人脑补出来的戏) 我有一个关于吃的喜好，就是偏爱酸味，在酸的和甜的食物中总是吃酸的。（当然，既酸又甜的味道是我喜欢的）这可能就是我没能得到甜甜的感情的一个原因吧。","tags":[{"name":"感情","slug":"感情","permalink":"https://blackdusts.github.io/tags/感情/"},{"name":"故事","slug":"故事","permalink":"https://blackdusts.github.io/tags/故事/"}]},{"title":"阅读笔记之人生的智慧","date":"2019-04-17T08:50:29.000Z","path":"2019/04/17/阅读笔记之人生的智慧/","text":"叔本华其人 简评《人生的智慧》 《人生的智慧》内容简述 第一章 第二章 第三章 第四章 第五章 叔本华其人叔本华出生在德国的一个富商家庭，其母亲有文艺天赋，结交知名的文艺界人士，对叔本华有一定的影响。后来其父亲自杀，母亲忙于社交，令其和母亲关系不和，并由此在作品中表现出对女性的厌恶。叔本华的思想在年轻时就已成型，后期只是在不断地修补，但是早年出版的作品并没有得到人们的重视，直到晚年才被人们认识到。其生命苦短的观点与佛教终生皆苦的思想接近，并且都主张通过压制欲望来减少痛苦，被认为是以为悲观主义的代表人物。 叔本华继承了父亲的遗产，生活富足，在物欲上可能满足自己，不需要为生活奔波，可以说一生中都在过自己想过的日子吧。由于其与母亲的缘故，在作品中表现出对女性的厌恶，终生未婚，然而实际上却有过几段不成功的恋爱经历。故而罗素认为他说一套做一套，说是通过克制欲望来追求幸福，结果却即泡妹子又大鱼大肉，是个伪君子。 简评《人生的智慧》虽然叔本华看世界的视角是悲观的，但在《人生的智慧》一书中，是教人如何追求幸福的。《人生的智慧》节选自《附录和补遗》，探讨了关于如何幸福地度过一生的问题，即幸福论。 幸福的感觉是如何产生的？每个人生活中怎样的世界，取决于这个人对世界的理解，一个人直接活在自己的意识里。当前时刻的生活由人和外在的世界组成，人的感受是外在世界通过人的意识才得到展示的，幸福的感觉也是透过意识获得的，而外在的世界只是间接的作用，意识才是觉得幸福感觉的首要。（外在世界进入意识中，意识中产生幸福感觉）外在世界千变万化，是由命运决定的，只有意识可以自主掌控。 感觉本文的立足点完全是站在自身利益出发，以自我为中心，活在自己的世界里。虽然显得有些自私自利，但是在这个思想被随意引导和误导的时代，就是需要多考虑考虑自己，才能看清外面的世界，也好看清楚自己。 《人生的智慧》内容简述主要讲述了影响幸福的主要因素及获得幸福的建议。当然，其实也是一本关于如何看待自我，认识自我的一本书。 第一章在决定命运的三个因素中：人自身、身外之物（具体的实物）、他人眼中的自己（虚的东西）。这三者中，人自身对幸福的影响最大。 第二章人自身包括健康的身体和健康的心灵。运动对于健康的身体什么重要，身体健康的状况又会影响内在，用健康去换取外在之物是得不偿失的。 痛苦和无聊是幸福的死敌，而人又无时无刻不在痛苦和无聊间摇摆，唯有丰富的精神思想可以摆脱痛苦。通过外部世界的刺激来满足内心的空虚，更加暴露了心中的无聊和单调，在这个世界上，一个人要么独处，要么选择庸俗。（看来我内心是向往庸俗的。）从外界的刺激获得幸福的感觉是不稳定的，只有内在幸福才能永恒，因此推崇自得其乐。 人通过发挥自己的才能来实现预期的任务可以得到幸福的感觉（成就感），分成三类：通过身体机能的代谢能力实现吃喝拉撒、利用力量的运动和竞技、施展感觉的能力（学习、思考等）。第三类是更高级的能力，通过发挥这种能力可以实现更高级的幸福。只追求感官上的快乐是短暂的，因为外在的实物无穷无尽，永远也填不满物质的欲望。 第三章人的需求分三类：其一温饱，其二性欲，其三为其他外在的东西。温饱不足，则人会痛苦；性欲虽然是天然的，但并不迫切；而其他的财和名则是无穷尽的。 （对于穷人和富人的财产观念，我感觉过时了，就不看了跳过） 第四章不要对他人眼里的自己太过敏感。不能由于他人眼中的自己而损害了自身和自身的财物，那是得不偿失的，不值得的，愚蠢的。利用声誉来驾驭和控制人们，加强和培养荣誉感的作用占据了首位。 只能从别人的眼中看到自己的存在，只能通过别人的认可才认亲自己的价值，那是迷失自我，是虚荣，是愚蠢。 （个人看法，自己有时候真是无法认清自我，可能是没有好好地自我反省，自我剖析，也可能是自信不足吧，这种对自我的无知导致希望借助别人的眼光来认识自己。好吧，我就是自己太蠢了，看不起自己。） 第五章获取幸福的办法就是减少痛苦。幸福的感觉源自受到压制的意欲得到了解放。","tags":[{"name":"阅读笔记","slug":"阅读笔记","permalink":"https://blackdusts.github.io/tags/阅读笔记/"},{"name":"人生的智慧","slug":"人生的智慧","permalink":"https://blackdusts.github.io/tags/人生的智慧/"},{"name":"叔本华","slug":"叔本华","permalink":"https://blackdusts.github.io/tags/叔本华/"},{"name":"幸福","slug":"幸福","permalink":"https://blackdusts.github.io/tags/幸福/"},{"name":"孤独","slug":"孤独","permalink":"https://blackdusts.github.io/tags/孤独/"}]},{"title":"阅读笔记之如何阅读一本书","date":"2019-04-17T08:49:52.000Z","path":"2019/04/17/阅读笔记之如何阅读一本书/","text":"前言 读者的自我修养 阅读技巧 粗浅的阅读 分析阅读 反思与想象 阅读和写作 后记 前言阅读一本书，最重要的是搞清楚自己阅读的目的，其次是阅读者对待书本的态度，最后是注重阅读的技巧以期得到最佳的阅读效果。本文还探讨了阅读与写作之间的关系，并记述了自己在撰写硕士毕业论文后的感悟。 注：本文在谈论自己写作观点的时候都是站在实用型文章的角度描述的。 读者的自我修养从最开始拿到一本书，就要理清自己阅读的目的，究竟是为了娱乐消遣还是从阅读中找到答案。看一些小说和故事，就是为了消磨时间，娱乐自己，这时候的阅读就显得不那么严肃，可以不用脑子就把眼睛从一行行的文本上扫过去，看过了也就完了，不必在意“从中学到什么”这样的问题。如果是阅读科普或是历史类的书籍，那读者最初就是抱着增长见识的心态捧起书本的，这时就要记住自己的目的，需要有意识地运用合适的阅读技巧去对待书本，才能取得更好的效果，不然心态错位，以消磨时光的心态对待书本以期获得增长见识的的目就要白费心思了。当然，如果走了另一个极端，把书本当初教材一样逐字逐句地研究，怕是效果不佳，收益有限吧。 阅读技巧阅读技巧分为好几步，分为粗浅的阅读、分析阅读以及总结反思。在第一步的粗浅阅读后，就要清楚当前这本书是否还有继续下去的必要了；在第二步的分析阅读中，就要按照阅读的技巧，在阅读的过程中，以及阅读之后都要认真操作，久而久之形成习惯，就能有助于阅读，之后第三步的反思就当是课后作业吧。 粗浅的阅读了解一本书的基本情况，主要是两点： 对书名、章节标题、目录，序言进行浏览； 快速总览全文，搞清楚这本书有没有细读的必要，不明白的地方先跳过去。 在图书馆找书看时，没有什么特别的阅读要求，想找一本好看的好书时，就可以这样找书，而不至于在认真看了大半本书之后才发现不是自己想看的，半途而废，弃之可惜，继续无意。 分析阅读分析阅读整体上分为两点： 带着问题去读， 边阅读便做笔记； 笔记分为全书框架型的笔记和细节的笔记 在《如何阅读一本书》中，分析阅读的第一个阶段有四个部分，第一条是对书本进行分类，这个我觉得不重要，不需要刻意为之，此后三条则十分重要，分别是： 用一两句话简短地概述这本书说了什么，即本书主旨； 列出文章的大纲； 找到作者的问题。 就上述的几条，我觉得就是在给没有写摘要，或是摘要写得不好的文章重新写一遍摘要。对于实用性的文章和书籍，摘要的写作可以遵从这个一个思路：要做一件什么事，为什么要做这件事，应该怎么做这件事，做了以后结果怎么样。简而言之，就是： 是什么？ 为什么？ 怎么做？ 可以看到，这种写作是有固定的模板和形式的，就像填空题一样，把自己的内容按要求填到要求的位置，这摘要也就写好了。我在一开始进行写学术论文的时候，对这种要求嗤之以鼻，觉得这是类似‘八股文’的毒瘤，可后来觉得，既然是实用性的文章，不需要你的文字有多出彩，而是规范为主，方便阅读者快速找到自己想看的东西，而不至于读了半天还在云里雾里。所以，为了方便自己理解，自己为正在阅读的书籍做笔记时，最好采用这样规范化的（摘要）笔记格式。 反思与想象我觉得上述的写全书框架和摘要，就是在阅读完了整部作品以后进行的，总结的思考都写在摘要和笔记里面了，那这里还总结什么，反思什么呢？这是时候要做的就是跳出本书讨论的主题，从更高一层的角度来看，看看书中的思想对自己的影响。举个例子吧，看了一些机器学习相关的书籍，来思考人类应该如何更好地理解‘学习’：机器学会一些‘学习’的方法，是在探讨了人类学习机制的基础上，那么从‘机器学习模型’在训练、预测以及评估模型过程中遇到的问题，是否也可以为人类的学习提供一些思路呢。这些是我瞎几把说的，但是在阅读完之后确实是可以来一个这样的瞎想，可以是功利的角度，也可以是天马行空的，算是一个阅读完之后的一个课后作业吧。 阅读和写作写一篇硕士毕业论文的思路和阅读一本书的过程十分相似，按照时间顺序依次是拟定题目，编写摘要和目录，再是详述文章的各个章节细节，当完成了这些框架部分的编写，剩下的也就顺理成章，水到渠成了。硕士毕业论文的题目一般只有几个字，至多不过十几个字，却要能够从中看出该论文研究的方向，不是很笼统的那种标题，而是要细化到具体工作的题目，这就需要一字一字地斟酌了。摘要的内容则更为重要，一旦读者看完标题，想进一步了解有关这个研究的内容，就要去看摘要了。实际上很多的人，不论是审论文，还是看论文，都把主要精力放在摘要上，摘要的质量将很大程度影响到整个论文的质量。至于文章的目录，可以进一步理清楚文章的结构，看出文章的思路。 不管是一篇论文还是其他的书籍，如果阅读者以写作者的思路来品读这篇文章，那肯定能省很大的力气；而写作者如果能更好地理清自己的想法，规范写作的思路，而不是随心所至，任意发挥，那也是造福读者了。（我觉得这想法是适用于实用性的书籍，对于文史类的作品，我就不瞎哔哔了。） 后记看《如何阅读一本书》，是因为我之前很长一段时间，甚至之后的很长一段时间里，都存在的一种低效阅读状态（功利性地阅读了一些文史领域的科普读物，可是所获甚少，基本上是以看小说的心态看的，看完也就都忘了，什么都没留下，这无法满足我渴望学点文化知识的心态）。我期望能够有所改变，所以尝试从中找到一点答案。 看了一部分之后，我还是找到了自己的一些问题，也知道了一些有助于改善阅读的方法。我的主要问题是： 阅读的心态一直不正，想通过看小说的手段得到看教材的效果; 阅读的前后不做笔记; 不愿意在阅读过程中思考，只会用眼睛看，而不用脑子看； 知错不改，知道上述1，2，3点却没有采取相应的行动。 另外，我还是想通过学习如何阅读来了解写作的一些方法，从一个阅读者的角度探讨写作者的落笔顺序。在阅读过程中，我看到了导师教导的摘要撰写方式在分析阅读的技巧中出现，这让我很欣慰。","tags":[{"name":"阅读笔记","slug":"阅读笔记","permalink":"https://blackdusts.github.io/tags/阅读笔记/"},{"name":"如何一本书","slug":"如何一本书","permalink":"https://blackdusts.github.io/tags/如何一本书/"},{"name":"写作","slug":"写作","permalink":"https://blackdusts.github.io/tags/写作/"},{"name":"阅读技巧","slug":"阅读技巧","permalink":"https://blackdusts.github.io/tags/阅读技巧/"},{"name":"浅读","slug":"浅读","permalink":"https://blackdusts.github.io/tags/浅读/"},{"name":"细读","slug":"细读","permalink":"https://blackdusts.github.io/tags/细读/"}]},{"title":"docker入门笔记","date":"2019-04-17T08:24:51.000Z","path":"2019/04/17/docker入门笔记/","text":"前言 为什么要用docker？ docker的基本使用 docker镜像的创建 docker应用中的问题 前言使用一门技术，要先搞清楚这门技术适合的应用领域，然后搞清楚具体该怎么做，本文先讲述docker的特点和应用，然后介绍一些基本的命令，实现如何使用别人做的docker镜像来搭建自己的环境以及如何创建自己的镜像。 为什么要用docker？在软件开发的过程中，在装环境的环节会浪费大量的时间，而docker可以把环境打包到镜像中，那么在换一台机子需要重新装环境的时候就只要打开镜像就可以了。另外，而避免了开发和测试过程中环境不一致导致的问题，简化项目的部署。 对于我来说，用docker就是用来装环境的，至于怎么开发，以前怎么开发现在还是怎么开发，没有什么改变，在用docker装完环境以后，docker的任务可就结束了。 经过几天的摸索，感觉docker还是应用于web开发相对合适，而对于其他的开发，就显得不那么灵活了。我已经找到可以使用专业版的PYCharm来添加docker容器中的环境，但是没找到怎么在vscode里调用docker的环境，而采用命令行的方式，每次把代码挂载到docker的数据卷上，然后进入容器启动代码，这样对于调试非常麻烦，所以其他领域中，不推荐采用docker。 docker的基本使用软件的开发环境被封装在文件之中，这个静态的，不修改的文件叫做镜像，可以放在仓库中，供下一个环境需要安装时使用。所以当某一台设备需要安装某个环境时，就在仓库中找到对应的镜像，镜像下载到本地，然后就可以开始使用了。从仓库下载镜像的命令为： docker pull &lt;镜像名&gt; 要查看本机中已经安装好的镜像有哪些，可以用命令： docker images 有了镜像就有了环境，但是这个镜像是模板，只能下不能用，想要变成可以使用的环境，就要先创建容器，环境被装在容器里。创建容器的命令为： docker run &lt;镜像名&gt; &lt;容器里执行的命令&gt; 其中，run命令后面可以附加很多的参数，常用的有： –name ＃指定容器的名字 -d ＃后台运行 -it ＃显示交互用的终端 –rm ＃退出时删除容器 -v ＃设置数据卷 -p ＃设置对外的端口号 每次运行run命令都会自动生成一个容器，除非每次都添加–rm参数，之后要启动之前创建的容器，只要用命令start，就可以了，但是不知道之前的容器叫什么名字，这是就需要查看当前有哪些容器，根据对应的ID来启动容器,采用如下命令： docker ps -a #列出所有的容器docker ps #列出当前正在运行的容器 找出容器以后，就可以启动容器了，对于启动，停止和删除容器，可以采用如下的命令： docker start &lt;容器名或id&gt; ＃启动容器docker stop &lt;容器名或id&gt; ＃停止容器docker rm &lt;容器名或id&gt; ＃删除容器docker rmi &lt;镜像名&gt; ＃删除镜像 docker镜像的创建前面讲的都是别人已经做好的环境镜像，我们直接从仓库里拉下来应用就好了，那如果是我们自己配置环境，然后做成镜像供自己和他人使用，那就需要创建自己的镜像，这时就要创建Dockerfile文件，书写内容如下： #文件名是Dockerfile From &lt;image&gt; #必须以某个镜像为基础镜像 ADD &lt;源系统的文件路径&gt; &lt;容器的文件路径&gt; ＃将源文件复制到容器中 EXPOSE &lt;端口号&gt; ＃暴露容器的端口用于和外界通信 RUN &lt;command&gt; #在镜像的顶层执行的命令，生成新的镜像 CMD &lt;command&gt; #在构建镜像时不执行，在用镜像构建容器时调用 然后运行build命令生成镜像，具体的见如下： docker build -t &lt;镜像名&gt; build之后的参数很多，具体如下： -t #设置镜像的名字 -f ＃设置Dockerfile的文件路径 -m ＃设置内存的最大值 docker应用中的问题访问镜像的速度太慢，可以尝试重启一下docker服务，使用命令： service docker restart 采用在后台运行程序，结果发现什么输出也没有，说明可能是出错了，那就把命令里的-d参数去掉，看看是什么错误信息。","tags":[{"name":"docker","slug":"docker","permalink":"https://blackdusts.github.io/tags/docker/"},{"name":"环境配置","slug":"环境配置","permalink":"https://blackdusts.github.io/tags/环境配置/"},{"name":"镜像","slug":"镜像","permalink":"https://blackdusts.github.io/tags/镜像/"},{"name":"仓库","slug":"仓库","permalink":"https://blackdusts.github.io/tags/仓库/"},{"name":"dockerfile","slug":"dockerfile","permalink":"https://blackdusts.github.io/tags/dockerfile/"}]},{"title":"物数所打杂记","date":"2018-12-26T05:34:13.000Z","path":"2018/12/26/物数所打杂记/","text":"前言 磁共振 Qt ANTRL4 ANTRL4语法规则 词法文件举例 语法文件举例 总结 前言从6月14号开始至今，我在武汉物数所待了6个多月，也着实体验了一把研究所的氛围。当初鉴于找工作的需要，想做个地方学习敲代码，就让老师安排去了研究所，也说不清楚当初做这个决定是否正确。 当然，到了一个新的地方，确实涨了不少见识。原本听着高大上的研究所原来是这么一回事儿，那些听着深奥的专业术语，多听两边也就习以为常。内心好些遗憾的是我呆了半年多时间，也就真是打了个杂，敲了几行代码，却没有去学一些和磁共振相关的稍微核心一点的东西。 磁共振我所在的项目组从事的是核磁共振仪器的设计制造工作，而我参与的是辅助其他人工作的工具软件调试和开发工作。一个十足的边缘人物，干的就是搬砖的活，不需要什么磁共振相关的知识，随便一个会敲代码的都能干。当然也接触了一些相关的名词，在此就做个记录。 处于外磁场中的原子核，受到与质子进动频率相同的射频信号激发，会发生核磁共振的现象。当撤掉射频信号的时候，共振的原子核会释放刚刚吸收到的射频能量，恢复原来的状态。通过分析释放出的射频能量，可以分析原子核的分布。由于在医学研究中，生物体中成分最多的是水，水中又有两个氢，所以研究分析主要以氢核为主。通过分析氢核在生物体内的分布，就可以了解水的分布和含量。而生物体内不同组织和器官的水含量和分布在健康和病变下有不同的范围，由此来研究磁共振信号和生物状态的关系。 对于氢原子，不同的外磁场强度对应不同的进动频率，也就对应不同频率的发射和接收脉冲。为了区分出三维空间中生物体的不同位置，就要使得生物体所处于的三维空间每个点的磁场强度都不同，这样接受到的信号才能区分不同的部位。所以外磁场是在一个维度上的渐变的磁场和两个垂直线圈产生的渐变磁场的叠加，三个维度的磁场可以分别控制。 射频信号的发送、采集以及控制操作不是仅仅通过手工操作完成的，对于不同的研究对像，要采集不同的信号，都要编写合适的脉冲序列来实现。在脉冲序列中包括各种信号的发送、控制及采样等步骤。我打杂期间所做的工作就主要是修改脉冲序列编辑器，这个编辑器是用来脉冲序列语句的，并可以观察对应序列的脉冲波形。我没能参加脉冲序列的编写，所做的不过是修改程序中前人留下的坑和添加某些小功能罢了。在此期间我做的主要有语法分析器的设计和实现，脉冲序列文本和脉冲序列图形的对应显示，信号的3D显示器设计和实现。 Qt实习期间的大部分工作都是基于Qt的程序设计。而我本人去研究所的目的就是去接触实际的编程机会，可以说是得偿所愿吧。在此过程中不敢说学到了什么编程经验，但是有了这一段经历，当再一次看到一大串长长的代码时，就显得不那么困难了。 Qt是一个跨平台的C++图形界面框架，有一堆封装好的图形界面函数，通过简单的语句就能实现好看的界面。另外，还可以利用Qt Designer工具，用拖拽空间的方式，快速进行界面的设计，有利于快速开发。 ANTRL4有个学习关于编译原理的机会，是我在研究所里的最大收获。由于磁共振仪器里面脉冲序列的编写涉及到领域特定语言DSL，就需要为这种领域特定语言设计相应的编译器前端，实现基本的语法分析功能。 编译原理涉及到的内容很多，有词法分析、语法分析、语义分析、中间代码生成、代码优化以及目标代码生成等环节。将与源代码有关而与目标机器无关的部分称为编译器前端，包括词法分析、语法分析、语义分析以及目标代码优化；剩下的部分用来实现目标代码的部分称为编译器后端。ANTLR这个框架可以自动高效地生成编译器前端，根据用户定义的语法文件自动生成词法分析器和语法分析器。 ANTLR这个框架虽然是由Java语言编写的，但是编写脉冲序列的语法文件需要用ANTLR的语法规则来写，并且最终生成的语法文件可以转化成各种目标语言的代码，因为主项目的程序是基于C++开发的，所以在编写完脉冲序列语法文件后，用ANTLR框架生成C++的源代码文件，这样主项目的程序就可以调用这个语法分析器来实现对脉冲序列的分析了。 ANTRL4语法规则利用ANTRL编写语法分析器，其本质是书写几个领域特定语言的语法规则文件。最简单的话，就是写一个词法规则文件和一个语法规则文件，文件的后缀名是g4。下面举一个简单的例子来了解基本的词法规则和语法规则文件。 词法文件举例123456789101112131415161718192021222324252627282930313233343536373839404142434445/* 多行注释*///单行注释lexer grammar pulseL; //表明这是一个词法文件//下面是定义关键字//分号前面是词法单元的名字，按要求最好大写，分号后面的是待分析的源代码文件中的词法单元实例，每一句规则以分号结尾；INT : &apos;int&apos; ;DOUBLE : &apos;double&apos; ;//定义变量的模式，采用正则表达式来描述ID : ALPHA (INTDIGIT|ALPHA)* ; //词法的定义中使用了其他的词法定义，则需要在后续用fragment关键字来申明那个词法规则是要被其他规则所引用的； fragmentALPHA:[a-zA-Z]+ ;INTDIGIT : [0-9]+ ; // 需要定义所以非字母数字符号的词法名称，不然符号无法被识别；ADD: &apos;+&apos; ;SUB: &apos;-&apos; ;//定义源代码文件中的空格换行等符号不被处理，并且规定注释的类型，用‘-&gt; skip’来对源代码的内容进行跳过处理；Whitespace : [ \\t]+ -&gt; skip ;Newline : ( &apos;\\r&apos; &apos;\\n&apos;? | &apos;\\n&apos; ) -&gt; skip ;BlockComment : &apos;/*&apos; .*? &apos;*/&apos; -&gt; skip ;LineComment : &apos;//&apos; ~[\\r\\n]* -&gt; skip; 在源代码文件中出现的所有符号，必须在词法规则文件的定义里面能找到；并且有重复定义的词，比如某些关键字的定义被包含在变量的模式里面，那么就需要把关键字的定义写在变量定义的前面。 语法文件举例123456789101112grammar pulseP;//申明一个语言文件import pulseL;//导入上述词法文件（本来词法文件可以和语法文件写在一个文件里，但是为了结构清楚一些就把两个分开写）file: statement+ EOF; //文件由多个语句和文件结束符构成statement: declaration |assignment; // 语句分为申明和赋值语句 declaration: INT ID EQUAL value_expression COLON;// 申明语句的语法结构assignment: ID EQUAL value_expression COLON ;//赋值语句的语法结构value_expression: value_expression (ADD|SUB) value_expression | SUB value_expression|INTDIGIT;//数值表达式的语法结构 语法文件的设计遵从自顶向下的方法。首先，一个语法文件是由一堆的语句和文件结束符构成的，这相当于是语法分析的启始规则，然后从上往下，把启始规则中的每一成分都进行递归地分解，直到不能再分解为止。例如上述的语法文件中，语句分为申明语句和赋值语句，申明语句又是由多个词法构成的，其中的’INT’、’ID’、’EQUAL’和’COLON’都已经是基本的词法单元了，不能再分，只有‘value_expression’可以再分，分为几种情况，可以是加减操作，符号操作，以及是基本的数字词法。在最后一条语法规则‘value_expression’中，词法被迭代调用了，这时候就需要注意了，需要把优先级高的规则放在前面，优先级低的放在后面。通过这样的迭代操作，可以把这个数值表达式分解成基本的数字符号加减形式，这时候语法不可再分，分析结束。 总结现在看来，出去见识一下还是值得的，待在学校里自习，不如在外面学习。虽然从回头的角度来看，利用这段打杂时间学习编程技术以便于找工作的目的没有实现，甚至在本来需要花时间在找工作的情况下有些浪费时间，但是我还是觉得出去找了一圈是值得的，认识了几个学校外的人，学习了一些其他领域的知识，看过了一些别人的学习工作日常。","tags":[{"name":"磁共振","slug":"磁共振","permalink":"https://blackdusts.github.io/tags/磁共振/"},{"name":"ANTRL4","slug":"ANTRL4","permalink":"https://blackdusts.github.io/tags/ANTRL4/"},{"name":"Qt","slug":"Qt","permalink":"https://blackdusts.github.io/tags/Qt/"},{"name":"杂记","slug":"杂记","permalink":"https://blackdusts.github.io/tags/杂记/"},{"name":"物数所","slug":"物数所","permalink":"https://blackdusts.github.io/tags/物数所/"}]},{"title":"求职危机后的反省","date":"2018-12-23T04:33:22.000Z","path":"2018/12/23/求职危机后的反省/","text":"前言走在路上被雷劈的概率虽小，但天威难测，万一被劈中了还是要认命阿。所以有时候杞人忧天的想法并不可笑，多想想也蛮好的，天真的塌下来也好有个心理准备。 危机来临在11月23号晚，我像往常一样，跑到南湖图书馆报告厅看电影。这一期的电影是日本版东野归吾的《嫌疑犯X的献身》，小说是看过的，再来感受一把电影。 从研究所下班匆匆赶回来，刚到报告厅坐下，发现隔壁实验室的一位同学也来这里看电影，就顺便攀谈起来，发现原来东野归吾的作品她都看过，聊了几句之后，电影就开始了。本以为这又是一个普通的周五晚上，和往常一样，看过，然后离开，然后还没有到电影的精彩之处，平淡周五的剧情就被手机上的几个未接来电和微信上的语音消息所打断。电话和消息都来自思科的HR，我走出报告厅，找了个僻静的地方，点开语音，没有具体说什么，只要说找个空闲时间说事。我感到有些奇怪，想着就业的三方协议早已经签完了，HR还会有啥急事，在这个放假的点还着急找我。 我给HR发消息说这会儿就有空，可以直说时，我就听到了这个震惊的消息——由于部门业务调整，公司决定收回发给我的offer，这意味着我在毕业之前就失业，在入职之前就被裁员了。当时的我，就像是被打了一闷棍，然后灵魂出窍，只剩下肉体的感觉。当然了，我表现得还算平静，在HR给我道歉和提出补偿的过程中，我只能以“嗯”，“我理解”，“好的，我知道了”这样的回答来交流。这一会儿，我感受到了生活给我的无情和随性。 初恋情节我是一个迂腐的人，在很多事情上都显得很保守，甚至在对个人的某些道德约束上有洁癖。 先回顾一下关于我之前的求职过程中对于公司的选择问题。在前一篇的求职总结文章中我没有给出正真的解释，在还没有签三方之前，薪资、岗位都更好的情况下，不选华为选思科的真正原因。 思科应该是在此次秋招中最早给我发满意offer的公司了。那是在中秋之前的9月21号，我刚刚离开虎牙面试的酒店，去公交站准备坐车回学校，在环境嘈杂的大马路上，我接到了思科HR给我打来的电话，说要给我发offer，我惊呆了。因为据我的理解，我虽然通过了思科的一轮技术面，拿到了直通终面的绿卡，但是也要先面一面终面才有结果阿，怎么会取消了终面直接给offer呢，所以我不太相信。当HR表示要和我详谈offer的细节时，我觉得当时环境太吵了，而且又危险，所以就和HR商量了要换一个时间，准备明天早上再详谈。可惜22号的早晨没能等来这个电话，所以没能在当天早晨应对好浙江大华的面试，这个锅，我是要甩给HR的。 时间在等待中流逝，一下子就到了中秋之后的27号。当天我坐车去准备面试腾讯的时候，在公交上又接到了这个HR的电话，商谈offer的事情。嗯，没错，我又为了等这个电话，没有参加腾讯的面试。当然，这个晚上，我得到了思科offer的详情，秋招的第一个满意offer有了。在海投海面的一堆公司中，只有思科最早给我满意答复，而且开出的条件在剩下的公司里，只有华为能达到了，其他的公司的薪资待遇及岗位都没有更够提供更好的了。在这种情况下，思科在我心里就成了初恋情人，而且是抱着长长久久在一起的期望。 HR没有要我立即答复，给了我两周的考虑时间，而我虽然手中有备胎，可以骑驴看马，但并没有想要以此为底向其他公司坐地起价，而是以此为借口，回绝了其他公司的好意。之后我参加的面试，也只是想看看以我的能力是否能够拿下offer，拿下的offer能值多少钱的心态在进行了，因为我心里已经准备和思科混了。 在第一次参加华为的签约会时，虽然开出的条件很诱人，并且我还特意咨讯室友，听了听他的意见，可实际上我心里早就有打算了。当时我的三方还没有签，在各有优劣的条件下，（思科的工作氛围、人性化、平衡的工作和生活；华为的待遇、理想的岗位、职业发展和晋升）我很难做出拒绝思科的决定，因为两者具备了部分我理想的工作性质，先给我承诺的公司，在我心里有更大的分量，或者说我的初恋情节。在得到思科offer承诺之后，我就在内心展开了一系列的关于未来的幻想，并且开始去图书馆找关于思科的书（我借了一本叫硅谷百年史的书，因为我在目录中看到了其中有思科的部分），去网上搜索思科相关的信息，想多了解了解思科，甚至于我的室友都已经给我取了一个英文的名字（可惜的是现在用不上了）。我想着一系列的操作，加深了思科在我心中作为初恋的地位，华为给我开出的条件再好我也不会回头了。在11月初，又有华为的HR给我打电话希望可以谈谈，并且表示薪资待遇，工作地点等都可以谈，可是我却真不知道要怎么回绝他，因为华为开的薪资已经比思科高了，工作地点除了无法满足我去杭州的要求，其他南京上海等更多的地点选择也更加符合我对未来的期望，工作的岗位也是我向往的通信相关的，比思科的纯软件岗位更适合我，并且可以等我三方在明年四五月份回来后再重新签。这些更好的条件我无法拒绝，可我做不到收回给思科的承诺，所以在电话里，我都没有和华为HR多谈细节，只是表示不准备换工作就结束了对话。 再吃回头草我是个做事风格直接简洁的人。听室友和招聘的人打电话，即使他不会去听这家公司的宣讲会，不会去参加这个公司的笔试面试，也能和打电话的招聘人员聊上好多，像是一个很想去这家公司的求职者一样。可我的做法是与他截然不同的，不论是打电话喊我去听宣讲会，还是打电话给我希望商谈薪资，我一般抱着不耽误自己时间，也不耽误人家功夫的心理，就直接告诉人家我不了解这家公司，或是岗位不适合我，就不去参加这家宣讲会或是面试，如果是商谈offer相关事情的，我一般直接告诉对方我已经拿到了其他offer，或是已经签了三方协议，不准备改签其他公司了。我对此时的出发点是，我不耽误大家时间了，我不会改变我之前决定的；我室友的出发点是，多点信息多条路，兴许以后有想法了，这就是一条途径。以前我是不以为然的，可是碰到了这事之后，我该反省了。 由于我的直接作风，导致好几家公司虽然给我发了offer，但是我都没有留余地，我和这些公司，有的连签约座谈会都没有去，这就连HR的联系方式都没有留；有的电话里沟通的，可是我回绝得太快，都不知道当初他给我开的什么条件；还有的是公司的电话，没办法回拨，又没有HR的个人电话，在这个失业的时候，我想吃回头草，都不知道找那条路可以走回去，是我之前做事太绝了吗？ 在此，我要感谢菊厂在我危难的时候拉我一把，感谢。 解决问题还是回避问题在我做决策的时候，健康问题是很大程度影响了我。从去年到菊厂实习开始，我周期性得出现腰肌劳损的症状，严重时影响我走路。我把这个锅甩给了菊厂，在实习时的工作强度使我体质下降，落下病根。 对于这个问题，我的做法是找一个轻松点的公司，比如思科。这是一种抛弃问题的做法，身体不好就要多锻炼身体，这又不是治不好的毛病，只是体质稍弱，缺少锻炼，并且长期静坐在电脑前面的习惯不好罢了，修改这些习惯，多锻炼身体就好了，这部应该成为不加班或是想要轻松工作的借口。 这种面对选择的时候，不能再仅仅回避问题了，这个情况我很早前就明白了，可是却做不到，需要细细想想。 因噎废食还是以小见大前面的秋招总结里有说，通过面试官的水平来评价公司的水品，这个论断到底合不合适呢。现在要加盟菊花厂了，屁股坐的位置变了，就要好好为菊花厂说几句了。菊花厂家大业大，招的人多，所以面试官也多，这人一朵，那就什么人都会有，难免会遇到几个不合自己胃口的，就这样通过一个面试官的态度就把公司给否定了，这样对公司不公平，对自己也不利。但是通过对面试官的考察，了解公司这个角度应该还是没啥太大问题的，只是从这个角度由此推断得到的结论那就未必准确了。 总结遇到这个事情，到解决这个事情，我应该还是很幸运的。中美之间的贸易关系这么紧张，美国又要开始搞菊花厂了，呆在外企应该不会是一个很好的选择，这次事件让我得以提前脱离这个未来的困局，也不能说是一件坏事吧。","tags":[{"name":"危机","slug":"危机","permalink":"https://blackdusts.github.io/tags/危机/"},{"name":"反省","slug":"反省","permalink":"https://blackdusts.github.io/tags/反省/"}]},{"title":"打油诗","date":"2018-10-06T02:17:12.000Z","path":"2018/10/06/打油诗/","text":"目录 1 桂花香两首 2 无题两首 3 几年前的几首诗 桂花香-记景 老天哈欠一口笑，树下金点随风飘； 叽叽喳喳沉仙境，夜来化蜂寻蜜桃。 桂花香-虚度时光 静躲树下细偷香，微风拂面似欲抢； 日复一日又一季，闲来翻身晒太阳。 背景：2018年10月初，工作有了着落，几个月来对未来的担忧一扫而空，故而心情甚是舒畅。当前正值国庆假期，天气晴朗，鉴三附近桂花盛开，香气四溢，我静坐于桂花树下玩弄手机，沉迷花香中，悠然自得，怎一个自在了得。 无题-1 夜来难眠侧翻身，鸡鸣破窗声声冷。 晨起艳阳在，不是昨日红。 一阵阴风起，小草弯腰无处倚，欲点地。 回头迈步从前路，已非昨日人物。 盼来春风，此路能否重度。 背景：11月23号收到公司解约通知，能接受此般事实，然内心终是难以平静，彻夜难眠。原本平静无波的生活彻底被打乱了，未来生活的计划全部清空，心中的慌张难以言表。急忙联系那些曾经向我伸手的那些人，多处都已无我容身之地，急切等待其中一个可能，盼着能有佳音传来。若是此处仍无希望，那就只得等到来年春招继续想办法了。 无题-2 今日红日胜似火，冬风凉爽，绿叶心暖。 不待春来，回首握住菊花菜，还是昨日味儿。 一时难回东南沿海，暂留武汉三载。 新路已开，且边走边等待。 背景：危机已过，得菊厂收留有感，算是有惊无险，只是我一开始回到家乡附近的愿望没能继续。 接下来的是2015年间写下的一些打油诗，本来发在某个小平台上的，可是现在小平台要关闭了，就把那些记录留在这里吧。 2015年6月8号 同往常一样行走在通往鉴一的路上， 喧闹的人群吸引了我的目光， 躺在地上的，是一位正在呼救的阿姨， 不知是病发，还是意外的凌驾； 喘动的人群还在， 身在一旁的我却开始心塞； 终有醒着的同学拨打电话， 我匆匆忙忙地奔向我的方向， 久久不能心安。 背景：总觉得我能无谓地面对世界，可是，即使大难降临在别人身上，作为旁人的我却同样显得无助，甚至伸不出手。刚刚看到阿姨呼救的时候，心中是有着好些同情的，之后跑到警卫处找保安，却又没看到人，瞬时就有种无奈的心塞。 2015年5月18号 脚踏行云手撑天，牛鬼神魔蹲两边； 我若有心蛇吞象，无奈满怀田园心。 阎王殿前走三走，牛头马面跟着走，菩萨见了亦低头。 沧海一粟何足道，蝼蚁蹒跚皆无脑， 我命由我不由天，天欲灭我我灭天。 背景：萎顿好一段时间了，总觉得找不到激情斗志所在。 2015年5月14号 人生在世是为何，无名无利非人做； 看那人心似水东流，百年之后一回头，呵，一切不都还是这。 背景：天下熙熙，皆为利来，天下攘攘，皆为利往；万般过后，尽归尘土。可笑啊，笑谁？笑他，笑你，笑自己。 2015年5月12号 人不风流枉少年，有心没胆真可怜； 欲上枝头摘明月，蛙声一起落水边。 背景：我TMD就一懦夫 2015年5月9号 千古艰难唯一死，万事蹉跎，只是未到回味时； 饱食终日，不知现在是何物。 祸患积于忽微，智勇困于所欲；惶惶不可终日。 背景：多想有害，闲出病来 2015年5月1号 外伤可治，心病难医； 物随心幻，万象皆毒。 背景：由口腔溃疡导致的心情躁动","tags":[{"name":"打油诗","slug":"打油诗","permalink":"https://blackdusts.github.io/tags/打油诗/"},{"name":"危机","slug":"危机","permalink":"https://blackdusts.github.io/tags/危机/"},{"name":"自在","slug":"自在","permalink":"https://blackdusts.github.io/tags/自在/"}]},{"title":"求职面试经验总结","date":"2018-10-04T13:33:31.000Z","path":"2018/10/04/求职面试经验总结/","text":"目录 1 前言 2 个人情况自述 3 面试总结 4 结束语 5 后话 1 前言寒窗苦读数十载，只为明日温饱在；血汗厂前多歧路，一段面经敲门开。 学生时代后期最重要的一件事就是求职。虽然在现在的IT行业，一两年甚至半年就跳一次槽很正常，但是第一份工作对今后发展奠定了基调，所以一定要好好找这第一份工作。现在我把前一段时间找工作的感想都记录下来，供他日一笑。 2 个人情况陈述就以我个人的经历来说，我本科是通信工程，硕士是信息与通信工程，课程除了基本的信号与系统、通信原理、移动通信、宽带无线通信、光纤通信、现代数字信号处理、数字通信、信息论、数字图像处理、计算机网络和计算机网络仿真等通信类课程，还有电路、数电、模点、高频、电磁场与电磁波、微波、单片机、嵌入式、DSP和FPGA等偏硬件的课程，也有数据结构与算法、Matlab程序设计、Java程序设计、数据库、算法设计与分析等软件类课程。就所学的课程而言，凡是IT领域的，都可以从事，可是实际上学艺不精，没法都做。 我本科从事过一段时间的嵌入式开发，可是停留在亮个灯的水平，连个操作系统都没跑起来，怕是嵌入式的门都没入。到研究生期间，从事图像处理算法的研究，可全停留在理论程度，论文也发不出来；研二出去实习，做的事情太杂，做硬件，硬件没学好，做软件，软件没学好。总结找工作之前的状态就是学得五花八门，水平却是一样都不咋的。 由于我之前的学校学习和实习学习主要集中在嵌入式（C、STM32）、图像处理算法（Matlab、OpenCV）、硬件测试（Python、SCPI仪器编程、Tcl）、桌面软件开发（C++、Qt、ANTLR4）几个领域，对于数据库、网络编程、多线程、linux、操作系统了解较少，仅具有少量的理论知识，故把自己的求职岗位确定在软件开发上，具体的是偏嵌入式的软件开发、偏通信协议的软件开发、偏图像处理的软件开发以及C++桌面软件开发。针对这些岗位，我把投递的公司限定在设备制造厂商。由于能力限制，我不太敢投递互联网方向的公司，对于银行、运营商以及研究所，由于个人不喜欢不看好，也尽量不投递。 回过头来看，我不投银行等此类公司的选择是否合理很难说。有利的一点是，我没有浪费时间在不喜欢的行业，不好的是，错过了一些锻炼面试的机会，也错过了可能更好的钱途和未来，有些事情不去试一试怎么知道不好呢。 3 面试总结记录的内容大多是我在面试完以后就记录下来的，记录的也主要是技术问题，涉及个人项目相关的问题也不描述了，只挑出和知识点相关的问题予以记录；HR面的问题相对杂乱，记录得也不多，而且由于我个人的特殊性，不具有太多的参考价值，不做探讨。 3.1 中国银联（应用开发C方向） 网关的实现:有很多商户的数据，由网管收集，然后统一提交给处理端，如何实现这个系统? 如何避免死锁? 如何判断什么时候用进程，什么时候用线程? 堆和栈的区别; 事务的概念?以及如何实现? 评价：这是我在秋招面试的第一家公司，大概是在8月初。在技术面之前还有一个群面，十来个人一组讨论问题，基本上能正常表达观点就可以通过了。遗憾的是我在参加公司面试前不了解该公司的行业特点，对于银行一类的公司，就技术方面的考察，重点在于数据库和网络通信的操作，所以面试当场就出现了一问三不知的情况，真是笑话阿。 结果：挂 3.2 华为面试（通信设备软件开发） 一面 进程通信的几种方式，信号量的意思 手写项目代码 语句‘i++;’和‘++i;’的区别 说说对C的认识 数值和链表的优缺点 手写内存拷贝函数 最短路径算法，红黑树 二面 为什么选择这个岗位，为什么觉得自己能胜任这个岗位? 个人最大的特点，举个例子说明? 参加过社团，具体做什么? 成绩如何? 薪资待遇有啥要求? 评价：这大概是秋招过程中，面试体验最不好的一家了吧。一般面试官看你答不上来会提个醒，或是换一个问题，要是答错了，那就过去了，或是纠正一下，只有华为的面试官，敢在我面试当场就评价我，“项目做的太简单，基础又不行！”。在此，我不得不提一下上一次去面试华为的实习生时的情况。短信通知下午两点签到，结果我按时去了以后，等到6点钟都没轮到我，面试官都快走完了，才问有没有还没面的，结果我上去以后，人家就给我俩分钟发挥时间就让我走了。我那时面的岗位是算法岗，可他屁的算法不问，就说有没有做过C++的项目，我说大的C++项目没做过，然后告诉我公司内部主要用C++做项目，然后两分钟就结束了。然后让我去等二面，又是最后一个，面了两分钟就滚蛋了，怕是肚子饿了要吃饭吧。我在秋招面试的这次面试没有排队，走了后门，一去就面到了，想来我上一次等了这么久，中午12点从学校出发，到晚上10点回到寝室，却只面了4分钟，怕是也有人插队了吧。 结果：过，华为上海研究所，无线网络产品线，18K，是我秋招薪资开得最高的一家了，不过我还是没有去，虽然公司、岗位、薪资、部门都是我期待的。 3.3 联发科（电话面试）（通信协议软件开发C++方向） C++的经典书籍 移动通信的常用名词的基本概念 链表，数组等数据结构 LwIP是什么？ 嵌入式操作系统 可重入代码 项目中最难忘的事? 社团里组织过的活动 评价：电话里说是了解一下情况，可是即问了技术的，也问了非技术的问题，还说之后两周内会有同事联系我让我去现场面，可实际却是啥后续消息也没有了。 3.4 汇顶科技（芯片测试开发） 电话面试 Qt信号槽机制的理解 时钟拉偏有什么意义? 电源纹波怎么测，自动化纹波测试系统怎么搭? 纹波对系统有什么影响? 现场面试 全程模电、电路分析，一问三不知 评价：在投这个岗位的时候，我是投着玩的，感觉即要求模电数电单片机，又要数据结构算法C++，还是芯片测试岗位，和我的履历挺合适的。在电话面试的时候，也和面试官了解了一下，这个岗位即是需要能看懂电路图，又要能写程序的，主要还是写代码，对硬件的要求，能和硬件人员沟通，懂基本的就行。结果到了现场面试，变成了面试硬件的岗了，问的全是硬件的，真是坑了我一把。 结果：挂，面完以后面试官觉得我能力可以，但不适合这个岗位，建议我去硬件应用岗位面试，我拒绝了。 3.5 思科（C++软件开发） TCPIP哪7层？ TCP属于哪一层？ TCP和UDP区别 TCP三次握手，四次握手过程。 浏览器上写下域名后访问网站的一系列过程？ 快排原理？时间复杂度？最差的情况？ 跳台阶，每次一阶或者两阶，需要跳几下？ 面向对象的理解？ 虚函数的作用？ overwrite，overload，override的区别？ static和const的区别？ static在内存的什么位置？static的作用？ 堆和栈的区别？ sizeof数组名和sizeof指针的大小？ 支持向量机原理？ 核函数？ 常用图像处理算法？ 评价：没有在官网投简历，去现场直接面试的，算是霸面吧。结果酒店面试官到的少，没有我面试的岗位，只好临时选现场有面试官的部门。结果，，，还是让我去视频面试。酒店的网不太好，连接不稳定，等了好久才面上的。问的问题都是中规中矩的，可能看我的项目经历偏硬件，结果一个项目的问题都没问，全是基础问题，涉及的面还是挺广的，从C++的基本语法，数据结构和算法，计算机网络、图像算法、机器学习都有问到，算是相对不错的面试了。 结果：过，薪资是年薪20万，算是我秋招中除华为外薪资最高的了，宣称的待遇也很好。在之前看吴军的《浪潮之巅》时对思科有一定的了解，可以说是因为崇拜科技公司的情节吧（其他人有华为的情节，我待过了所以没有其他人一样强烈进入华为的意愿），所以在和华为薪资差距不大的前提下，我最终选择了思科。（如果当初和华为谈薪资的时候，华为多给各两千，我就卖命给华为了） 3.6 鼎桥通信（C++软件开发） valiate变量? 互斥量和信号量的区别 消费者和生产者? 评价：面试官很友好，你回答不出来还会告诉你答案。面试的流程好像是有三面的吧，技术面，群面，HR面。 结果：挂，当天早上那么多的人，感觉好像就我是一面就挂了的，结果在回去的路上遇到了同班同学，发现她和她一块的小伙伴也挂了，再一问，原来大家都是面C++的呀，瞬间明白了。面试中我问过面试官：”鼎桥是华为和诺基亚的合资公司，那公司的氛围是像诺基亚还是华为？“，他说是华为的风格。像华为一样上班，却没有华为那样的待遇，那就不值得去。 3.7 海格通信（应用软件开发、协议软件开发） ICMP是什么协议?什么作用? 链路层协议的作用? MAC层作用? 常用的调制方式? ASK,PSK，FSK的含义 语音的频率范围 常见的无线接入方式 基带和频带的区别 为什么要调制? 用过哪个型号的STM32? STM32上的通信接口有哪些? 串口的数据帧格式? 时域脉冲对应频域的什么信号? 傅立叶变换公式? 幅频曲线的含义? 但dBm和dB的区别? 1瓦等于几dBm? 评价：问题有些偏嵌入式和通信方向，问题还是比较广泛的。面试官评价我还在通信的门口徘徊，不得其门入口。想来也是，问到的问题好像会答，可不知道该怎么回答好。在谈到薪资的时候，面试官说看到我在听到薪资的时候脸都变了，果然我是个喜怒形于色的人。话说如果不是薪资太低，这家公司我还是会好好考虑的。 结果：过，薪资广州11K，算是我秋招中给我开价最低的公司吧。面试官也看到我当场脸绿了，不过海格是秋招中第一个给我发offer的，不过价格太低了，不考虑。后来面试官又给我打电话说可以给我再加1K，虽然当时我没有offer，但我骗他说我已经有其他offer了，算是婉拒吧。 3.8 网易（软件测试） 一个页面，只有一个空行，其他什么也没有，如何测试? 一个用户登录页面，要输入用户名和密码，如何测试? 一个模块有一个上游系统和下游系统，上游系统把输入给这个模块，这个模块处理完了把数据给下游模块，下游系统处理完了再给这个模块，模块处理完了再给上游系统，现在上游系统和下游系统没做好，只有当前模块，如何测试当前模块。 给了两张数据库的表单，是从数据库里提取出来的数据，让说说如何测试提取表单这个过程。 灰盒测试? 翻牌题?（笔试题） 评价：这就真是去玩的了，前面都问各种情况的测试方案，反正我都是要么一问三不知，要么就是瞎说一通，好在面试官小姐姐脾气好，没有当场发飙怼我，不然要以为我是来逗她玩的了（好像确实是这样的）。在面试等待区看到了好多的美女，看着她们排队去参加群面，我强烈怀疑网易在招非技术岗时完全都是根据照片来筛选简历的，这一眼望过去就没有普通的妹子，果然我那一天是没有白去的，挺值的。 结果：挂，虽然一面一问三不知，但二面面试官一直夸我水平好来着，就是不适合该岗位，推荐我去投其他部门。就算拒绝我，也是态度良好，还劝我去其他岗位，体验算是一流吧，结果也是现场就给出了，网易面试给我的印象该是秋招中体验最好的吧。 3.9 海康威视（C++软件开发嵌入式方向） 一面聊天，二面扯淡 评价：这是我面试的这么多公司里，最水的一家吧。感觉就是在我做完自我介绍以后，就聊个天，吹了几个牛，就没有了。真不知道什么样的人才会被选来当面试官。另外，一般的公司安排面试流程，有的微信通知，有的短信通知，还有投影显示安排，差一点的就是专人喊名字了吧，那至少也有张表啥的，可是海康不知道是为啥，一面是叫号通知，二面的就变成在空白的纸上手写名单，一个个喊了，虽说蛮朴素的，但是总感觉在高档酒店里，配上这样的面试安排，显得有点寒酸吧。 结果：挂，碰到这么玄的面试也是绝了。聊天算是聊得蛮开心的，就是不知道我哪里答的不好，犯忌讳了？？？ 3.10 中兴（软件开发） 一面 说说对xdsl技术的理解? 香农定理? 仪器间的通信协议? Linux中查看CPU占用率的命令 Python和tcl的比较 用MATLAB做过的研究? 二面 用英语介绍武汉？ 加班的看法？ 部门来了新领导，准备如何与他沟通？ 组织过什么活动？ 个人的缺点？ 待遇的要求 评价：总的来说，中兴的面试问题挺好的，问的有通信相关的，有程序设计相关的，还考察了英语，基本的沟通能力，涉及到了多个方面，可以较好地反应出个人能的综合水平。值得表扬的是，技术面面试官的问题是从面试者的陈述中提问，在面试官和面试者有交集的领域发问，来寻找应聘者的亮点，这比好多公司做的都要好。二面的英语口语介绍武汉真是给我来了个猝不及防，这种临场发挥也能展现应聘者的能力和素质。缺点是，其他公司的HR面一般都是氛围融洽的聊天，不说嘻嘻哈哈，至少也是笑脸相迎的，但是中兴二面感觉就蛮严肃的，搞得我有些紧张。 结果：过，南京12.5K，说是给我开到最高档了，直接拒。 3.11 优必选(软件开发) 手写冒泡排序 口述快速排序过程 大数乘法 知道哪些设计模式？ 写单例模式？ 说说观察者模式？ 一堆麦穗大小不一拍成一排，只能从左向右找，不能回头，求自认为最大麦穗的找法？ 工作地点的要求 同时有多个心仪的offer怎么选？ 有无女朋友？ 评价：考察点主要集中在程序设计，对数据结构和算法要求多一些，还侧重设计模式，说明该岗位主要是纯粹的软件开发，也就是码农，对我而言不合适。 结果：挂，不了了之。感觉应该是二面的时候，对于工作地点和岗位的要求过于强烈，所以不考虑我了吧。 3.12 浙江大华（软件开发） 图像中抠出感兴趣的区域的代码怎么写? 数组和指针的区别? 进程和线程的区别? 评价：面试官人很好，问得也挺好，都是根据我的描述来提问相关的领域问题，问题与我跟人所学的贴切度蛮高，说明面试官有水平。我觉得面试就需要这样的面试官。前面的那些公司，无论是问基础知识，还是和业务相关的内容，都是站在面试官个人学识的基础上出题，一旦面试官的知识面和面试者的简历和陈述相差太大，那人才的选拔很大程度上就取决于机缘。 结果：挂，本人学艺不精，准备不足，水平有限，当场就挂了，挂得也算心服口服。 3.13 虎牙直播（软件开发） const用法 虚函数用法 虚函数属于类还是对象 括号运算符顺序 评价：问的问题都是比较偏的，侧重于语法基础内容，而且其中一个问题是把虚函数写在构造函数中，这种用法在书中表示尽量不要用这样的写法，是应该避免的写法，不知道面试官是故意考我还是他自己没学好，瞎出的题目。 结果：挂。 3.14 新华三（软件开发嵌入式方向） 一面 sizeof用法 快排 大端小端的理解 Python和C的区别 二面 介绍简历上没有的东西 优缺点？ 最近看过啥电视剧电影或是新闻动态？ 学术研究上了解到的最新动态？ 工作地点，女朋友？ 给推荐一本最近看的书？ 三面 zigbee和WiFi的区别? zigbee的组网图? 什么是datasheet？看过哪些datasheet？ 晶振与钟振的区别? 非全日制和全日制学生的区别？ 评价：面试过程中规中矩，从面试体验来看算是不错的公司。 结果：过，在offershow上看了薪资水平，有些低了，所以谈薪资的时候我就直接没去。 4 结束语个人秋招总结：从7月初开始投简历，到10月中旬结束秋招，投递简历超30家，笔试了20来家，面试了13家。其中，OPPO、海康威视提前批、阿里巴巴提前批挂我简历；CVTE、科大讯飞、招银网络科技、迈瑞挂我笔试；面试情况如上所述，最终拿到的offer按时间顺序为海格通信、思科、联影（这家算拿的有点不一样，是在饭桌上面的，上海14K，说得我蛮心动的，可是我还是拒了）、新华三、中兴、华为，总计拿了6家，除了联影，其他都是通信（网络）设备厂商。 面试面试，应聘者面试的同时也是考察这个公司的时候，不仅是公司找我们，也是我们选公司。公司的名声，薪水待遇，工作地址这些实实在在的东西，可以通过网络或是往届的学长学姐了解，那真实的接触感受就要从和面试官的接触中来真实体验了。 有的公司家大业大脾气大，应聘就看运气了，这说的就是华为。以我在华为待过的7个多月的感受，在华为还是蛮好的，可惜这两次面试给我的体验都太差，或许是林子大了，啥鸟都有的缘故吧。另外，从一份内部流出的武长地区招聘定薪表看到，原来C9，985，211和普通一本是按照不同的等级来定薪的，这样等级森严的公司，我这武汉爸大的人是进不去了，这背后骂一骂也就随便了。 有的公司随着行业没落，也渐渐的不行了，这说的是中兴，还有鼎桥通信和海格通信。中兴事件之后，中兴元气大伤，这薪水肯定是开不高了，待遇也好不到哪里去了，还有鼎桥和海格，通信产业日薄西山，早在十年前就不可与互联网匹敌了，可是不开好一点的待遇，哪里招得到人阿。我也是阿，要想赚钱，还是得朝互联网看。 就从面试体验来看，网易、大华、思科、新华三、中兴做的相对好些，从面试流程和面试官的态度看来，氛围还可以，其次是中国银联、鼎桥和海格，算是可以，至于其他的，要么面试官水或没水平，要么面试安排乱七八糟。华为的面试流程混乱，面试官不行，海康的面试官太水，联发科放我鸽子，汇顶面试官之间没有沟通好，连这个岗位招什么人都不商量好，浪费我时间；优必选，面试安排没弄好，耽误我时间，虎牙面试官没水平。 5 后话计划赶不上变化，理想在现实面前毫无反应的机会。一开始的杞人忧天竟然变成了事实，我竟然真的遇到了这人生中的一大危机，在离开学校之前，就被公司给裁员了。 刚听到这个消息的时候，是11月底了，那会儿IT互联网领域的秋招已经基本结束了，我已经把其他该拒的offer都拒了，这会儿给我这个消息真是的让莪一懵。HR给我打来电话告诉我，由于所在部门的业务调整，收回发给我的offer，并给我一笔多于三方协议上约定的分手费。 当初拿到offer的时候，其实我还是比较奇怪的，因为我只进行了一轮技术面就被录取，这让我很奇怪，也很高兴。由于是我秋招的第三家面试，所以自我感觉表现得并不好。当然了，这些是后话，总之能拿到这个offer我还是很开心的，但是得来容易失去也就更容易发生，在毕业之前失业了。 好在，当我回头找菊花厂的时候，菊花厂收留了我。前面说了这么多吐槽菊花厂的话，在这个关键的时候帮了我大忙，只是我离回家的理想越来越远了，我只能选择留在武汉的岗位了。 我最初的规划就是回到江浙沪发展，并且定居在那里。可是现在，我只能安于当前的现状了，现在武汉干几年，等有机会了再回家，或者就干脆留在武汉发展。另外，之前由于工作位置的考虑，我在感情问题上选择回避，等到工作了再做打算。现在既然留在了武汉，这个问题似乎可以提上日程了，毕竟我可以工作到学妹毕业了再离开武汉。","tags":[{"name":"求职","slug":"求职","permalink":"https://blackdusts.github.io/tags/求职/"},{"name":"面试","slug":"面试","permalink":"https://blackdusts.github.io/tags/面试/"},{"name":"软件","slug":"软件","permalink":"https://blackdusts.github.io/tags/软件/"}]},{"title":"频谱仪和网络分析仪的使用","date":"2017-12-03T13:52:45.000Z","path":"2017/12/03/频谱仪和网络分析仪的使用/","text":"前言做硬件测试，就要接触到各种测试仪器，因为主要做模拟链路的性能测试，所以实习中接触的主要就是频谱仪和矢量网络分析仪。我想在我离开实习的地方以后，可能就再也不会接触到这些东西了，所以就暂且当作日记，把还记得的东西记录一二，万一哪天有兴趣再研究这些东西也说不定。 精度不高的测试，那就只要把测试仪器和被测电路接到一起，然后按下仪器上的自动设置autoset，然后稍微调整一下参数就可以看到测试结果了。当然了，如果要想更准确地测量到希望看到的信号，就要对测试仪器的原理有一些了解，被测电路的原理也要知道，并且了解到测试系统对待测电路的影响，从而对测试电路和测试仪器的接口进行匹配，然后合理地调节参数，实现更好地测量。 频谱仪我用的频谱仪是安捷伦公司生产的N9030A。频谱仪的功能就是做频谱分析的，对要测量的数据进行采集，然后用FFT分析得到信号的频谱。频谱仪在屏幕上显示的，横轴是频率，纵轴就幅值。表示信号大小的单位有很多，电压，或是功率，通常我在测试的时候用的都是功率，所以一般是dBm，当然也可以是电压dBv。这种取对数的表示方式，可以把零点零零，，，的值展示在负一百到几十dB之前，更加方便。 开始测量前，要清楚仪器的测量范围和被测电路的输出范围，超出仪器量程的测量是没有意义的。 因为在实习的过程中，遇到了很多的坑，导致测量的结果不准确，所以就把主要的几点记录一二。 频谱仪的组成及原理信号进入频谱仪以后，首先会经过一个Attenuation电路，然后是一个混频电路，把信号搬移到中频段，然后或有一个中频放大器对信号进行放大，使得信号在一个合适的工作范围，然后通过中频滤波器从低到高地扫描，得到的信号经过显示电路显示在屏幕上。 测试环境模拟信号的测试对环境的要求还是比较高的，在仪器或是被测电路的周围放有的其他上电设备，都会对测量的结果产生影响。举两个遇到过的例子，在一次连接好仪器和被测电路之后，调好参数，看到频谱显示的结果与之前的结果有所不同，频谱线不稳定，一直在大幅度地晃动，且在带宽外出现了大量的信号，经查发现，是由于连接仪器和被测电路之间的同轴线放在另一块上电的电路板上面，受到了这块电路板的干扰了；另外一次是这样的，在测试完一组MTPR的结果后，发现被测电路的性能很差，检查时，在连接好电路后不上电，观察频谱仪的底噪出现变化，在不同的频段出现的不知名干扰信号提高了噪声，这些干扰随着测试环境周边的其他用电设备一一下点，频谱仪上各频段的干扰信号也一一消除，然后依次断开被测电路，连接器件，最终发现是在被测电路和测试仪器之间的连接口转换器件上的线圈耦合了周围的电磁信号产生的干扰。 所以，上面的两次出现问题的原因有两个，一是要保证测试环境的干净，不要有太多的带电的大功率的设备干扰测试系统，二来是测试中用到的各种连接和转化器件最好买贵的，质量差的屏蔽效果不好，引入的干扰多，给测试带来很大的麻烦。 由上面的经验可以知道，在测试前要先确认好测试环境，通过观察频谱仪底噪看看有没有干扰；找一个之前测试过的电路，连上后看看信号是否正常，确保连接和转换器件没有损坏。 参数设置在连接好测试系统之后，就可以上电测量了。如果不知道信号的频率范围，可以按auto看看，系统会自动调整到合适的参数显示频谱，如果知道信号的频谱，那就可以设置屏幕显示的起始频率和截止频率，参数span就是截止频率各起始频率的差。如果屏幕下方提示信号overload了，就要调整频谱仪的衰减Attenuation，过载的信号测出来是没用的。然后，看到信号以后可是适当调整参考位置reference，就是屏幕左上角的值，用来调整纵坐标的上下平移。最好的信号显示方式当然是完整地显示信号，并占满整个屏幕，所以还可以跳调一调纵坐标的刻度，即每格的单位。 如果没有什么意外的话，基本上就可以看到一个合适的信号频谱了。接下来，就开始调整其他参数来获取我们希望看到的测试结果了。 假设要测量的是在2MHz这个频点的信号功率，并查看2.1MHz处的噪声，那么就可以把测量的中心频率center设置在2.1MHz，且让2.1MHz的频点有在屏幕的范围内，即stop频率要大于2.1M，要分辨出这两个频率，就要让中频滤波器Res BW的值小于两者的频率差，因为Res BW这个参数也叫做频率分辨率，如果Res BW小于待测两个信号频点的差，那就测量不出来。理论上，Res BW越小，测的信号应该是越精确的，这个Res BW就是仪器量程的最小刻度。但是选择的刻度小了，测量的范围又不变，那动态方位就变大了，所以测量所需要的时间也就增加了，仪器的反应慢了。至于VBW，是屏幕的显示分辨率，不需要太刻意去调整，一般调成自动就好了。 调好Res BW之后，就是读出要测量的信号值，可以用Mark标注到那个频点（mark即指定的横坐标），就能显示出那个频点的幅值，如果要换单位，比如测dBm/Hz，或是dBv,就选择Mark Function，选择对应的选项，对于功率测量，不仅仅是频点的，还有频段的，所以可以选择bandwith，读取带宽内的功率。 如果要同时标注多个点，就多用几个mark，如果想同时显示mark对应的幅值，那可能就要用mark table了。做完了标记后，想把当前的测试结果保存下来，可以选择save，既可以save图片，也可以save数据。如果经常要测试这种条件下的数据，可以把当前的参数设置state也保存下来，下次测试的时候直接recall这个state就可以。 通常，测试的时候对Attenuation的调整只要输入不过载就好了。有的是需要多调整一下衰减，使得信号在仪器的最佳线性工作区，有时候则完全不使用Attenuation，而是使用外部的衰减器，因为仪器的Attenuation会抬高系统的底噪。另外，仪器一般都用DC coupled，因为交流耦合会接上内部的电容，从而改变系统的响应。如果想要在屏幕上看到更多的细节，可以增加扫描的点数，那个就能丰富细节了。如果屏幕上的频谱有轻微的抖动，可以采用平均的方式，获得多少次叠加的统计结果，可能会比一次测量的结果更有代表性。最后，就是需要注意，频谱仪的输入阻抗一般是50偶，需要在被测电路和之间做好相应的阻抗匹配。 网络分析仪矢量网络分析仪用的也是安捷伦公司的产品，型号是E5031C。网络分析仪的使用有两步，先校准，再测量，所以校准好仪器后，测试就基本做完了，接上被测网络直接观察结果就好了。网络分析仪的横轴是频率，纵轴是待测量，单位是dB，表示的可以是增益、衰减等。 仪器的校准分为内部校准和外部校准，采用外部的标准组件进行校准更加精确。校准前，要设置好仪器的各项参数，如起始频率、截止频率等，每次修改这些参数，都要重新校准仪器。 根据被测网络的特性，确定输入输出端口数，可以是单端输入输出，双端输入输出，也可以是单如入双出或双入单出的。在Analys里选择Fixture，选择里面的端口类型，如果用了双端口，就要打开对应的Balun选项。 网络分析仪从网络的输入端输入信号，信号会从start频率到stop频率依次扫描，网络的输出端输出到网络分析仪中，网络分析仪会比较输入输出的关系，当然，也可以分析输入端的信号和反射回输入端的信号，这要看测量的是网络的什么S参数了，通常测量的有单端反射系数S11、单端传输系数S21、双端传输系数Sdd21、双端反射系数Sdd11。 从网络分析仪发出的信号默认是0dB的，如果被测网络的增益较大，就需要减小输出功率，不然会导致仪器自动关闭连接，从而无法测量。网络分析仪的单端阻抗也是50偶，被测网络和网络分析仪的连接需要进行匹配，不然测得的结果不准确。 总结话说在大厂里面，仪器还是都挺高端的。其实我还是蛮想学学示波器的使用的，可是一直都没有什么机会，希望可以有机会拿来玩一玩。","tags":[{"name":"实习学习","slug":"实习学习","permalink":"https://blackdusts.github.io/tags/实习学习/"},{"name":"频谱仪","slug":"频谱仪","permalink":"https://blackdusts.github.io/tags/频谱仪/"},{"name":"网络分析仪","slug":"网络分析仪","permalink":"https://blackdusts.github.io/tags/网络分析仪/"},{"name":"匹配","slug":"匹配","permalink":"https://blackdusts.github.io/tags/匹配/"}]},{"title":"MTPR测试及DMT调制原理","date":"2017-11-30T11:26:28.000Z","path":"2017/11/30/MTPR测试及DMT调制原理/","text":"前言实习至今，一直在做xDSL模拟链路的MTPR测试，一开始什么也不知道，就是把各个模块接上线，打开电源，按下自动化测试脚本，等几分钟测试结果就出来了。到了这会儿，5个多月的时间了，说起手上的工作具体做的啥，还是云里雾里的感觉。这中间有很多是本科通信原理和无线通信课程里的东西，可惜当初学得不咋的，现在做的也是稀里糊涂。 为什么要进行MTPR测试MTPR的英文是Multi-Tone Power Ratio,即多音功率比。首先，我们要知道在进行数据通信的时候，收发的数据是搭载在一系列的载波上面进行通信的，而在一个载波上承载多少的信息，是由这个载波的信号质量即信噪比来决定的，如果这个载波的信噪比SNR值高，那这个载波就可以多发几位的数据，对我们而言就是可以有更快的上网速度，如果哪个载波的SNR比较小，那么承载在这个载波上的信息就有更高的误码率，所以为了提高效率，就在这个载波上少承载数据。所以，为了能够自适应地根据信道的变化而调整载波上的数据量，可以更有效率地进行通信，测量MTPR的值就非常重要。 当终端刚接到局端上去之后，终端和局端在进行正常的数据通信之前，要先经过握手和初始化的过程，才能激活，即建立可以正常通信的链路。在初始化的过程中，两端的设备就会对信道的质量进行计算，从而规划好合适的传输速度。 那么在验证板时期，而非产品板时，为什么要进行MTPR测试呢？当然是尽可能地修改电路提升MTPR的值。为什么不同载波的SNR会不同，有好有差呢？因为器件本身的性质，CPE（终端）和CO（局端）设备对不同频段信号的响应不同；物理线路的物理特性，对不同频段的信号有不同程度的衰减，以及不同子载波间的信号干扰，信道的噪声，这一些列的原因都会导致在电路中电信号不再是我们想要的那样。 MTPR的值是怎么定义的呢?如果当前要测量某个子载波的MTPR值，就让信号源产生一个信号，这个信号的正常频段上，待测子载波不发送，其他载波正常发送，这个信号经过测试链路后，由于电路系统的非线性（上述的原因），这个原本没有发送的载波的位置会出现一个不希望出现的信号（比系统的底噪高），假设其他发送的载波信号值都一致，那么该载波的MTPR值就是相邻载波的信号值减去待测载波位置的信号值，该MTPR也可以说是SNR。当发现信号经过测试电路后，某个频段的MTPR值不达标或是异常，就应该想办法修改电路设计和器件，以达到理想的MTPR。 为什么会有这个不该出现的信号呢？很大程度上是电路的非线性导致的谐波，而多个子载波的谐波叠加就出现了较大的噪声。这和调制的方式是有关系的，后面会提到，xDSL中用到了OFDM，这种多载波调制技术的载波都是某个频率（这里是4.3125KHz）的整数倍，所以谐波都叠加在这个频点的整数倍上了，故而没有发的子载波位置会出现不希望的噪声。当然了，其他的调制方式也会出现谐波的问题，但是应该没有这种叠加的效应，所以不太严重（不了解，瞎说的）。 DMT原理xDSL中，调制技术是DMT，英文是Discrite Multi-Tone Modulation, 即离散多音调制。我在前面已经介绍了一部分OFDM的内容了，离散多音调制可以认为是分两步调制的，先是多载波调制：一串经过一系列处理的二进制码流，根据每个子载波的SNR，确定可以承载信息bit的位数后进行分块分配到子载波上；第二步是QAM，英文是Quadrature Amplitude Modulation，即正交幅度调制，也就是利用相位和幅度联合调制。所谓的正交就是相位相差90度的载波的乘积在一个周期内的积分为0，所以，利用星座图，把二进制块映射到对应的位置，即获取到星座图上的幅值和相位。再把这个幅度和相位搭载到对应的子载波，调制就完成了，而多载波调制的过程就可以通过傅立叶反变化来实现，生成的时域信号就是要发送出去的基带信号了。由于之前经过星座图映射得到的位置数据是复数，并且IDFT处理前后的数据都是并行的，且变换后也还是复数，所以需要先把并行的数据转成一串数据，并把这串数据分成两串，一串是实部，一串是虚部，这两串数据分别和两个正交的载波相乘之后相加，就是要待发送出去的实际信号值了。 当然了，我好想说错了一些，实际上在刚得到星座图映射到的负数后，会把一个符号内的这一串数做一个符号延长，生成一个共轭对称的，是原序列两倍的信号，这样做就可以在IDFT之后只生成实数，不在需要两路正交信号承载了，节省了硬件资源。实际在做数字调制即星座映射生成符号之前，需要经过一系列的编码过程，比如扰码、前向纠错编码、交织编码等一系列降低误码率的操作，这些是物理层之前的操作，与媒体介质无关的，由软件算法实现的（我猜的），所以不是研究的重点，与实际的电路波形相关的就是OFDM和QAM的部分了。 我再把上面说的这些简略地总结一下就是串性的二进制码流根据信道子载波SNR分块，由星座图映射得到复数序列，扩张序列成2倍长度的共轭序列，把序列进行IDFT，获得实数序列，将并行的实数转化成一串实数，这就是要发送的数据，把该数据进行数字化，再通过DAC把实际的波形生成（我猜的）。这应该就是一个完整的时域波形信号生成过程了。 遇到的一些问题在测试的过程中，经常出现测试结果异常的情况，下面是我遇到的几种情况。 同轴线坏了，有的是出现了几个dB的衰减，影响测试结果，有的是断了（由于是双端口中的一根），导致功率少了一半。 连接线放置的时候，经过其他电路板（上电的），导致信号被干扰。 功率限制的原因：linedriver的输入不能太大，不然信号会被削波；Balun在大的功率下，频率响应变差。 Balun的频率响应范围变成测试的瓶颈。 周围的大功率设备对测试电路产生影响，表现在通过连接期间中的非屏蔽铜线圈，双绞线耦合到信号，使得不同频段的底噪有所抬升。","tags":[{"name":"实习学习","slug":"实习学习","permalink":"https://blackdusts.github.io/tags/实习学习/"},{"name":"MTPR","slug":"MTPR","permalink":"https://blackdusts.github.io/tags/MTPR/"},{"name":"DMT","slug":"DMT","permalink":"https://blackdusts.github.io/tags/DMT/"},{"name":"OFDM","slug":"OFDM","permalink":"https://blackdusts.github.io/tags/OFDM/"},{"name":"QAM","slug":"QAM","permalink":"https://blackdusts.github.io/tags/QAM/"}]},{"title":"铜线接入技术简介","date":"2017-11-19T02:30:02.000Z","path":"2017/11/19/铜线接入技术简介/","text":"前言到菊花厂实习了近五个月了，接触到的是接入网领域中铜线接入技术终端设备的硬件性能测试工作（我感觉大部分时间是在给其他人打杂，干的都是跑腿的活，和技术无关）。既然出来实习了，多多少少总也该见识到一些东西的，就暂且记一下，不枉出来混的这几个月。 接下里写的主要是一些基础性的概念，有信息领域的基础知识和业务相关的特定领域知识。有些东西我自己也还不太清楚，但不管对错，先写了再说吧。 接入网概念和分类上网的方式有好多种，如果是一台普通的笔记本电脑，可以通过一根网线接到路由器上上网，也可以连接到路由器发出的WIFI上网；如果是一部手机，可以用流量上网，也可以用WIFI上网。上面说的这些是通常的上网方式，可是这里面的接入技术又不尽相同。 先说说什么是接入网吧，在一堆的节点和通信链路相互连接组成的网络中，用户的终端设备利用某种通信介质构成的链路连接到网络中，这一段实现从终端到外部的广域网的连接所需的设备构成了接入网的物质基础。 接入网和核心网 对于整个网络，可以简单地分为两个部分，接入网和核心网。接入网的功能就是为了实现用户终端到外部网络的连接功能，提供一个可以进入互联的通道；而核心网主要负责数据的路由转发，实现数据通信的功能。从这里可以看出，接入网实现的功能是将服务提供给具体的终端，为不同的终端都提供接入网络的服务。对于有线接入，一个用户会独占终端及相应链路的资源，因而线路利用率不高，投资成本相对大一点；但是在核心网中，面向的是数据业务，完成数据转发，而不仅仅由用户独占，因而资源共享，成本相对低廉。这是接入网和核心网的几点不同，由于终端的多样性，接入的方式也就多种多样。 接入方式和接入设备 简单的看，可以把接入方式分为有线接入和无线接入。有线接入对应固定网络，无线接入对应移动网络。常用的有线接入方式根据介质的不同又可以分为铜线接入和光纤接入。无线接入根据技术的不同分为数据网络接入和语音网络接入（我自己这样命名的，用来区分流量和wifi）。因为我实习所在的部门采用铜线技术接入的，故而之后皆介绍铜线接入技术相关的内容。 对于铜线接入网的组成，主要是由终端、局端和连接两者的数字用户线组成，当然由于线路距离和带宽分用的问题，中间会有一些中继器等设备。这里的终端其实就是Modem，当然，我们现在已经很少看到这样的设备了。就算看到也是具有Modem功能的路由器了，用电话线上网的情况已经比较少了。 对于铜线接入，其实是一个正在被淘汰，在有些地方甚至是已经淘汰的技术了。大的趋势就是“光进铜退”，现在做铜线接入不过是作为过渡的作用而已。现在小区、楼房，大部分都是光纤接入，有些也是仅仅在最后的入户百米、几十米内还是铜线。无论是在材料价格、传输数量上，铜线都不及光纤，只是由于铜线网络布局早，依托固定电话业务的发展而至今苟延残喘。并且海外的小区线路改造成本高，配合光纤，发挥最后百米的优势才使得铜线有暂存之机。 硬件概念及演变一个完整功能的设备，是由一堆的硬件电路和软件组成的，由于我所在硬件部门，故介绍硬件相关的东西。 具体的硬件有很多种分类，就已简单的形态和功能来说，可分为元件、器件、单板和模块这几种。元件就是简单的电容电阻等电路的基本组成部件、而器件是具备某些功能集成电路、如放大器、数模转换器、电平转换器、单板则是元件、器件以及PCB线路组合在一起实现的完整电路；模块是标准化程度较高的特定功能的电路。 随着技术的发展，硬件工艺的发展，硬件的技术也在不断的变化。一开始，只有简单的分立元件，只能搭建简单的模拟电路，这时候硬件设计靠的是硬件工程师模拟电路设计的能力，之后，有了数字电路，开始需要逻辑时序的配合，半导体工艺的进一步发展，集成电路出现，数字电路的标准化，硬件设计开始变得简单了，再后来，出现了SOC，简单的外围电路就能实现基本功能，对硬件工程师的要求也越来越低了，而且把更多样的功能实现交给了软件，让软件去实现更丰富的功能。所以，就板级电路的设计而已，相对来说，需要的东西已经越来越少了，硬件工程师也渐渐地变成了一个连线工。（当然了，我连连线工都不是，只是在给连线工看连好以后，连线的效果好不好） 铜线接入技术Modem，就是调制解调器英文单词的前几个字母拼起来的，他的作用就是实现模数和数模转换，一般来说，Modem上至少有两个口，一个是接数字用户线的，该线上传输的是模拟信号，会和局端相连；另一个口是接的是网线，传输的是数字信号，会和计算机相连。但现在的Modem一般功能都已经比较强大了，集成了无线网卡和多个网口，所以也具备路由器的功能了。但是我们研究的还是只有Modem基本的功能。 但是，话虽那么说，可我之后还是不研究调制解调功能，因为调制解调功能已经由芯片完成了，研究重点在信号从芯片TX出来到数字用户线以及信号从数字用户线到芯片RX这两个过程中经过的链路，称这芯片到数字用户线之间的链路为模拟链路。 硬件组成模块Modem电路中核心的芯片包含了很多个部分，研究的重点是是AFE，又称模拟前端，用来实现模拟信号的处理。AFE对外有两种端子，一个是TX，用来发送信号；另一个是RX，用来接收信号。在信号从AFE的TX出来之前，需要经过好几步，首先从DFE出来的二进制数据经过DAC的转换成为模拟信号，在经过一个低噪声信号放大器，然后在从TX发出来。同样的，在RX端接收到信号之后，会先经过一个放大器，再进行ADC转换，然后将得到的数据传送到DFE进行处理。 当信号从AFE的TX端发送出去之后，会来到一个叫做Line Driver的电路，这个电路其实就是一个信号放大电路，一来是AFE发出的信号功率有限，二来信号在之后的数字用户线上会发生衰减，引入噪声，所以需要在信号发送侧加一个放大器，以便接收端能够接收到一个稍微好点的信号。 信号经过line driver电路之后，会进入一个叫Hybrid的电路之中。这个电路是用来实现频分复用的功能的，即发送方向和接收方向的信号线都连接到了Hybrid电路中，但是在发送的时候，TX方向的信号经过Hybrid电路后到达数字用户线，而只有很少一部分信号会通过Hybrid电路发到RX端去；同时在接收方向，来自数字用户线的信号会通往RX端，而通往TX方向的会被Hybrid电路所阻挡，实现了二四线的分离。（因为信号走线是差分形式，TX有两根，RX也有两根，而数字用户线也是两根双绞线，因此称为二四线分离） 数字用户线接入协议从最开始出名的ADSL说起，之前协议的名气不大不了解。ADSL是非对称数字用户线，表示上行速度和下行速度不一样。ADSL一开始使用了4K到1.1M的频谱资源，之后不断扩展，后来又发展了VDSL协议，再就是G.FAST协议，这些铜线技术协议，随着速率的不断增加，接入的距离却在不断地变短。比如ADSL，虽然速度慢，但可以远至几公里，而最快的G.FAST要是想达到1Gbit的速度，怕是只能在100米以内了。 之前的协议就不说了，就从ADSL开始，是G.992.1,然后是ADSL2，是G.992.3，再是ADSL2+，是G.992.5;握手和初始化协议是G.994.1;VDSL是G.993.1,VDSL2是G.993.2,之后有出现了Vectoring技术，以及新的标准G.FAST。其中的具体内容暂且不谈了，以后再说吧。 总结暂时先写这些，之后再补充吧。","tags":[{"name":"实习学习","slug":"实习学习","permalink":"https://blackdusts.github.io/tags/实习学习/"},{"name":"接入网","slug":"接入网","permalink":"https://blackdusts.github.io/tags/接入网/"},{"name":"铜线接入技术","slug":"铜线接入技术","permalink":"https://blackdusts.github.io/tags/铜线接入技术/"},{"name":"硬件","slug":"硬件","permalink":"https://blackdusts.github.io/tags/硬件/"},{"name":"协议","slug":"协议","permalink":"https://blackdusts.github.io/tags/协议/"}]},{"title":"立个Flag,近期的任务和要求","date":"2017-11-12T14:34:46.000Z","path":"2017/11/12/立个Flag-近期的任务和要求/","text":"前言自上一次写日记已经过去半年多的时间了，感觉自己总是改不了这些个老毛病，很多次有下笔的想法，又是想把事情想清楚了再记录，可这想来想去的又让拖延症和懒癌占据了上风。真是对自己感到着急阿，不能再总是这样了，所以先给自己立个flag，写几个字，留个痕迹挖个坑，算是推自己一把吧。 概要总的来说，之后的日记还是沿袭之前的那几个类别，但具体的形式可以有些变化。感想类的日记里，不仅有当时思考的问题和想法，还可以是单纯的问题记录,故事的转述，有时候看完书不一定要有看法才动笔的，没想法也能发几句感慨的；专业类的日记里可以加些科普性的内容，对于专业的东西，还没想明白的可以直接先把问题记录下来，或许几年以后回头再看这些问题才能有思路；再有就是把一些经验进行总结，现在遇到过的坑，以后碰到了就不能再跳了，可是技术问题要是长时间不解除就容易把一些细节给忘记了，所以还是尽可能地把问题记一下。 有关实习自从离开学校到外地实习已经快要五个月了，虽然也没学到啥，但好歹是接触了一些学校里没有的新东西，不论是专业知识上的还是工作中社会上的见闻，都是可以写一写的。所以我对自己最近的要求是要完成下面这几个方面的记录： 接入网的业务和背景：局端、终端、连接方式 铜线接入技术简介：硬件模块（组成和功能）、协议（演变和特征） 测试仪器的使用：网络分析仪（原理和用法）、频谱仪（原理和用法） TCL语言：基本思想和excel操作 MTPR测试的原理及流程：为什么测？怎么测？ 图像处理图像处理的内容是和我的毕业有极大相关的，可是我自己一个人又没有太大的毅力独自利用看书和网上的资料学习，可也不能不学，总得抽时间看看这些方面的内容的，所以就把之前看过的一些相关的内容简单的记录一下，方便之后学习的时候查看，也是为了督促自己抓紧时间学这些内容。 这一类的记录和其他的都不一样，其他可以随便一些，可以说是看心情决定动手，可这些如果现在不好好学好好写，到了快毕业的时候就会比较痛苦，所以这个也相当是强加给自己的任务吧，是必须要面对和解决的问题。这些光靠看文章和资料是不够的，一定要和code紧密联系，无论是用matlab还是C++，用opencv还是caffe，都要把代码跑一跑看一看，不然写再多的屁话又有什么用呢，近期就先把下面几个内容写好： Canny边缘检测 相关滤波 HOG特征检测 科普类把专业性的东西和外行说，用人话表达出来，并不是一件容易的事情。就像有时候我们想把一件简单的事向别人解释，可是却怎么都说不清楚，很大程度就是对事件的认识不够，所以我要学习这种解释问题的能力，也是反思自己学习中死角的好时候。所以我要从计算机、网络、通信等相关领域开始写一些科普性质的文字，比如下面几种： 人类的语言到机器的语言 计算机的结构 网络间的通信 生活感想和阅读感言对于生活中遇到的有感悟体会的事情可以写一下，有些看过的文字、对话，喜欢的词句都可以记录。听了这么久的科普电台，有些有趣的人和事，也值得动动笔，具体的什么就不要求自己了，但是偶尔写一写还是有必要的。 举一个例子，就拿自己做饭吃和到外边餐馆吃进行研究，思考费用与时间成本、生存效率和精致生活、流水线和个人分工的问题。应该说这不是一个小题大做的话题，而是能够以小见大的问题。 现状及其他我对当前自己的状态是很不满意的。我总是会先强迫自己专注几天，然后毅力耗尽之后又颓废几周，如此循环，感觉陷入了自己挖的怪圈，不想出来也出不来。 当我心里有很多的话，却又没有地方可以倾诉的时候，把她们在键盘上敲下来就变成了一件有趣的、快乐的事了。我相信，以现在的环境，我想我会很快喜欢并迷上写字的。（之前没有采用这种方式，是我采用了其他无聊的方式来打发更无聊的时间了） 不能让自己闲下来，一旦人处在不知该如何是好，该干什么的时候，是很容易胡思乱想的，以后要避免自己进入那种状态。","tags":[{"name":"任务","slug":"任务","permalink":"https://blackdusts.github.io/tags/任务/"},{"name":"要求","slug":"要求","permalink":"https://blackdusts.github.io/tags/要求/"},{"name":"flag","slug":"flag","permalink":"https://blackdusts.github.io/tags/flag/"}]},{"title":"图像处理之特征检测","date":"2017-04-08T01:25:06.000Z","path":"2017/04/08/图像处理之特征检测/","text":"前言图像是由一堆的像素点堆砌在一起构成了，如何让计算机可以理解这些像素点从而做一些简单的事情，比如比较两幅图片中是否有同一个物体。这个时候，我们就需要在图片中寻找一些有代表性的点或区域组成一个集合作为物体的描述。计算机认识了这几个点或区域，也就侧面认识到了这个物体。 用以描述和表征图像的特征有很多，在实际应用中往往根据需要来选择对应的特征。认识到这个特征的特点，就可以理论性地、有逻辑地根据特点来推导出这些特征检测的方法，这样说来，这些是手动设计的特征。（另一类通过深度学习获得的特征是系统自己学习的非人工特征。） 下面介绍的是局部特征，仅对某一个邻域做操作获得到的特征 good feature怎么算是一个好的特征呢，有大致的四个原则： 对于同一场景的不同images，都可以找到feature； 不同的features之间是可以区分的； features的数量应该远远小于image中的pixels的数量； feature是基于区域的，而不是全局的。 Harris conner基本思想：在image的某个小块，向它四周移动一定的像素后，移动窗口前后对应的每个像素差的平方和相对比较大的，就是harris conner。（即无论哪个方向移动窗口，框口内的像素变化都比较大） 其中要点：对于向邻域移动微小像素，可用泰勒公式展开，留下一阶和二阶，化简整理只剩下一阶的梯度项；用高斯滤波的原因是减小噪声的影响和不同距离的点对中心像素的影响程度不同；采用角点响应函数可以免去特征值的计算过程。 harris 算法步骤： 对图像进行高斯滤波； 对于每个像素，计算垂直的两个方向的梯度值；（可用导数卷积核来卷积实现） 计算角点响应函数R； 选择阈值，确定候选角点； 进行局部极值抑制获得harris角点。 harris cooner的特点： 对亮度和对比度变化不敏感； 具有旋转不变性； 不具有尺度不变性。 特征点和特征描述子特征点的数据量太小了，只有坐标和亮度，仅凭这样的信息，是无法用来匹配和比较的；如果说就仅仅利用两幅images中的特征点来做相关，一一匹配试验，那肯定不行阿，因为相关不是旋转不变的。而且，一旦图片的尺度，亮度，角度变化了，那么不同images中同一特征所对应的特征值确实不一样的，该怎么知道它们是同一个点呢，接下来又该怎么来做匹配呢。 把特征点和邻域内的其他像素信息利用起来，构建一个特征向量，这样一个描述子除了特征点的坐标亮度信息外，把尺度不变，旋转不变，方向信息等等都包含进去，所以，在不同的images里，同一特征点具有相同的描述子，那么这样充分信息的一个描述子就可以用来做接下来的匹配了。 SIFT由上边的分析，我们知道，一个点的信息量不够，还要借助邻域像素的信息，另外，尺度变化的问题也许需要解决，这时SIFT就出现了。 基本思想：要解决尺度变化的问题，那就去寻找当尺度变化了，特征点仍然不变的点；要解决旋转的问题，就把所有的特征点转到指定的方向。 其中要点： 高斯拉普拉斯（loG）运算是比harris、梯度等其他操作更稳定的，却可以实现尺度不变的算子，但LoG的运算量较大，而高斯差分（DoG）运算可近似LoG，所以用DoG来计算。 对图像进行DoG操作之后，用中心点是否是局部极值来作为特征点的判断依据。 把特征点邻域内的像素点的梯度的变化的主要方向作为该点的方向，然后把角度调整到指定方向，那所以的点就同意了，不必在意是否旋转的问题了。 SIFT特征提取步骤： 构造高斯金字塔，进行尺度不变点（即特征点）检测； 计算特征点邻域的梯度，求梯度的直方图，获得特征点的主方向； 将前面获得的特征点，尺度信息，特征方向组合成特征描述子； 获得了SIFT以后，就可以进行特征匹配了，在此不再研究。","tags":[{"name":"特征","slug":"特征","permalink":"https://blackdusts.github.io/tags/特征/"},{"name":"检测","slug":"检测","permalink":"https://blackdusts.github.io/tags/检测/"},{"name":"harris角点","slug":"harris角点","permalink":"https://blackdusts.github.io/tags/harris角点/"},{"name":"SIFT描述子","slug":"SIFT描述子","permalink":"https://blackdusts.github.io/tags/SIFT描述子/"}]},{"title":"人工智能三大招","date":"2017-04-01T08:18:10.000Z","path":"2017/04/01/人工智能三大招/","text":"前言很明显阿，信息时代的下一个阶段就是智能时代了，那么，人工智能的技术就显得相当的重要，这不仅对于信息学科的人来说是如此，对于大众，了解一些智能技术也是很有用的。人工智能技术本身就是让机器来模仿人的思考行为过程，是人们总结人类成长演变得到的规律应用在机器上，那么反过来，人类也可以从机器的智能中获得灵感，反思自己的行为是不是傻得不如机器了。 机器学习如何让机器学会学习呢，就像人一样，在经历了一些事情以后，就会对这些事情有了一个大概的认识，从而总结出一套规律来看待这些事，这样，以后再碰到类似的事情，就可以不再手忙脚乱无所适从了。 而这，其实就是一个找规律的过程。当然了，首先要明确一点，在现实的世界，没有一条不变的定理（世界充满了未知和不确定，假设是确定的规律，那不就是可以用规律预测未来了嘛，这不就说明命运是被安排好了的嘛）。没有一条规律是可以准确解决出现的所有类似问题的，那么这是就需要在所有可能的规律里面选一个比较合适的。那么，这要怎么选择呢，就需要一个评价的标准。利用这个标准，再把规律应用到经历的事件中，选出最合适的那个规律。 这个规律，在人类身上，可能就是做事的方法，看待问题的方式等等。那么，人类是如何形成这些方法和态度的呢，和机器的过程很像，那么人的评价标准是什么呢，这就取决于人的偏好了，而人的偏好，是由最初的印象或是本身的性格所影响。 机器学习是人工智能中一个热门领域，也是实现人工智能最有希望的一个分支。在这个领域，有三个我觉得是实现人工智能非常重要的方向。他们分别是具有引导能力的强化学习，懂得类比的迁移学习以及拥有想象力的生成对抗网络。 赏罚分明——强化学习和之前的机器学习过程不同，强化学习在不断地和外界交互，从何不停地调整规则。当然了，和上边的评价标准类似，这里需要有一套合适的赏罚规则，每一个动作，都会得到惩罚或是奖赏，这样机器就会对某类动作产生喜好和厌恶的倾向，而这也是人类在成长的过程中，接受到的一种普遍的教育方式。 反观人类的社会想象，就是在很多的地方赏罚措施形同虚设，名曰法制实为何物我就不来说了，导致的结果就是守规则的人无奖，反而被违规的人损利；而违规的人却不被惩治，社会秩序如何正常。当然了，我并没有要求严刑峻法，只是觉得有规则没执行，那所谓的规则不就形同虚设了嘛。另一点，选择性的奖励和惩罚（执法）也是混淆了规则的意义，并不能让系统学会和懂得这套规则，只会继续混乱下去。 触类旁通——迁移学习举一反三是聪明人，可如何让笨人掌握举一反三的能力却不那么简单，迁移学习只是简单得学习了人类这种把解决一件事的本事应用在其他类似的事情上，却不具备高度抽象总结归纳的本领，当那一天人工智能可以做到这个程度，那人工智能的真正出现也就不远了吧。 机器可以通过学习一件事而拥有解决类似许多事的能力，而人也可以，并且人更可以通过学一件事而解决一些不太相干的事，人是有思维和灵感的动物，一点思想的火花就可以燃烧整个视野。 无中生有——GANsGANs可是说是最近几年机器学习领域最热门的领域之一了。我觉得他拥有想象力，而这种想象力却不是天马行空的，而是中规中矩的想象，是以前没有的，又是合乎逻辑的。 GANs是一种网络结构，是用来学习和训练的，和前面的两种学习方法是不一样的，他们是机器学习的分支，而GANs是在各个领域中都可以拿来用做训练的结构。","tags":[{"name":"人工智能","slug":"人工智能","permalink":"https://blackdusts.github.io/tags/人工智能/"},{"name":"机器学习","slug":"机器学习","permalink":"https://blackdusts.github.io/tags/机器学习/"},{"name":"迁移学习","slug":"迁移学习","permalink":"https://blackdusts.github.io/tags/迁移学习/"},{"name":"强化学习","slug":"强化学习","permalink":"https://blackdusts.github.io/tags/强化学习/"},{"name":"GANs","slug":"GANs","permalink":"https://blackdusts.github.io/tags/GANs/"}]},{"title":"骑行有感","date":"2017-03-26T07:09:28.000Z","path":"2017/03/26/骑行有感/","text":"前言好久没写文字了，就把之前没写的都补到这篇杂谈里来了。近日在看《走向共和》这部剧，在袁世凯离开婊子窝前，给那个女人留了一副对联，在此记之： 商妇飘零，一曲琵琶知音少；英雄落魄，百年岁月感慨多。 取该篇名为骑行有感，是今日我在骑车的过程中心情愉悦，有感有思，故而取此题。下边就先扯扯我之前对看书和方法论的一些想法，再把今日的感悟记下来。 关于看书的问题首先，不管是自己，还是我想告诉ta这些话的人，都该首先知道，看书不看书，有没有阅读的习惯，是不足以评判这个人有没有学识和水平的。就我发觉的情况看来，很多人单纯地对爱看书，有阅读习惯的人高看；或是把看书认为是比其他娱乐休闲方式更高档次，这或许是源自中国传统文化中对知识分子和会看书的人的简单归类。 我在一开始去尝试看书的时候，是因为看书是认真学习的同义词，是嬉戏玩闹的对立词，故而选择阅读作为一种兴趣。后来，就变得喜欢上看小说了，由此一发不可收拾。 其实我心里是抱有这样的想法的，看书的爱好比他们玩游戏可好多了，自恃有点优越感。其实际上，只是看书的动作少少安静，过程稍稍优雅，不会干扰别人，又不需太大成本，偶尔有所感，有所触动，仅此而已。切不可让自己被自己的无知给蒙蔽，沉静在自己的世界里。 而且，看书还分种类的，我觉得是可以分为两类的，学术类和艺术类。我总是喜欢看艺术类中的有故事的书，较少设计学术类。之前一段时间，不断给自己找各种提高境界的学术类中的科普读物，结果看得兴趣索然。当看书的目的变了的时候，对内容的那种好奇和渴望也渐渐退去，我该找一个更好的法子来对待这个无问题。 看得书多却并不一定长见识，主要原因在于：一、看书的层次不够，量少类寡，只识文断字不思其意。在一开始的偏好之后，阅读的书限制在喜好的范围，认识变得狭隘；二、阅读的书不合时宜，缺乏一定的认知，水平不够难以理解和体会书中之意；三、认知太低，脑容量不够（不是玩笑话）；即便知识多且丰富，却吸收不了，可能说到底还是层次的问题。 方法论的讨论再看钱穆的《中国历代政治得失》的过程中，谈到了制度的制定，修改，推翻等的一系列过程，由此想到的一些问题。 没有一个理论是完全的真理，他的存在是由他所在的现实环境决定的，而在未来，他的发展和变革也是因为环境的变迁，使得原来的理论出现了不符合现状的矛盾和缺陷。为了解决这样的矛盾而对原先的理论进行修改以适应新的环境；又或者是面对新的情况，理论稍加修改就可以胜任。所以总结起来，理论的发展和改进，是应对新环境出现的矛盾和适应新的情况而做出的修正。 这个看法也适用在自己的成长变化过程中，就自己对眼前世界的看法，态度，认识，也该是一个这样不断变化的过程。要能够面对过去的自己，否定肯定过去的自己，改造现在的自己。（感觉自己越来越会扯大话，空话了，怎么会有这么多虚的呢，我也不知道，可能我的内心是一个很想给别人讲大道理的人吧。） 小眼界，大世界今日一早，我骑着小黄车从驾校回来，这一路经过的是武汉比较繁华的地段吧。一路上各种车马来来往往，道路两旁的高楼大厦也是满目皆是。恰好今日天气晴朗，不冷又不热，我一个人置身在这样陌生的环境中，是那样的微小（不是渺小阿），这时候我心里之前的那些屁事（烦我恼我的那些事）就都想不大起来了。 平时在学校的时候，每天都在同样大的范围里，从一间屋子转到另一间屋子，重复着前几天重复过的动作和反应，两只眼睛也始终只看到眼前的这些，虽然过的是闲而无力的日子，却也时常会担心这，担心那，让脑子和心脏都只围着眼前的这个场景。感觉我自己已经被我自己围在自己所看到的世界里，而隔绝了外面的世界。 现在看来，在这个地方待久了，就像是给一叶障目，忘记了外面的天地，以为我的世界就是眼前的世界。所以，我总是在放大身边的烦恼，把注意力过分地压在了不该如此重视的地方。 旅游能解（心）乏解（心）困，能抛烦恼事；大山名川能静心能阔胸怀，这一点我觉得我现在可以理解了，古人诚不欺我。当然了，那些没想到这些问题，只是抱着人游我亦游的心态，眼见高山流水，心却仍寄前事，再开阔的视野也解不了愁。 我想，为了加强我看法的说服力，就举个关于眼睛视力的类比。这就需要先科普一点眼睛的知识了：眼睛看物体，是接受物体的反光，而后在人眼的视网膜成像，而后识物；但眼力有限，对于外部世界，眼睛能够同时承受的亮度是有一个范围的。假设光亮有1-100种不同的亮度，眼睛接受的范围只有50，那么，在视野中注视的区域最亮的是90时，眼睛能够分辨的光亮就是40-90之间的光亮，其他是看不见的，所以生活中，若是在黑夜中用灯光照眼睛，那就什么都看不到了，那是因为黑夜下的光亮都很低，而眼前的最亮确是100，所以只能看到50-100间的光，故而此时眼前只有白的一片，啥也看不见了。所以，外部世界就像是那盏灯光，一下子把眼界把外部世界放在眼力，之前的那些屁事就如同黑夜般，消失了。 总结就先这样吧，想到了其他再写。","tags":[{"name":"看书","slug":"看书","permalink":"https://blackdusts.github.io/tags/看书/"},{"name":"方法论","slug":"方法论","permalink":"https://blackdusts.github.io/tags/方法论/"},{"name":"大世界","slug":"大世界","permalink":"https://blackdusts.github.io/tags/大世界/"},{"name":"解愁","slug":"解愁","permalink":"https://blackdusts.github.io/tags/解愁/"}]},{"title":"卷积神经网络简介","date":"2017-03-14T02:48:13.000Z","path":"2017/03/14/卷积神经网络简介/","text":"目录 1 前言 2 深度学习 3 卷积神经网络 1 前言卷积神经网络是深度学习模型中的一种很重要模型，为了更好地理解卷积神经网络，就先了解一下有关深度学习的内容，然后再介绍卷积神经网络的几个重要特点。 2 深度学习深度学习是具有深层结构的神经网络学习，不同于浅层学习，深度模型可以自己学习特征，具有更强的学习和抽象能力，是一种多层表示学习方法。 低层的特征往往能抓住局部的模式，并对原始特征的改变很敏感；高层特征建立在低层特征的基础上，显得更抽象，对原始特征的变化更加不敏感。在浅层模型中，特征工程是系统成功的关键。 虽然深层网络和浅层网络在理论上都可以逼近任意函数，具有类似的数学描述，但是在节点数差不多的情况下，深层模型比浅层模型具有更好的函数表达能力。浅层学习更加侧重于分类、预测、回归等模型，深层学习则侧重于特征学习（表示学习）等自底向上进行抽象的分层模型。 早期由于深层网络在梯度反传时存在梯度消失或梯度爆炸及计算量大的问题，直到后来提出了无监督预训练和有监督调优的等方法，改善了深层网络的学习困难问题，深层学习才有现在的局面。 深度学习的几个主要应用领域是图像识别（计算机视觉）、语音识别和自然语言处理。 对于深度学习工程，选好模型，获得数据，之后就是训练调参的工作，了解各类参数至关重要。深度学习模型有三类参数：可学习参数、结构参数和训练超参数，分清这三类参数有利于快速学习各类DL框架的使用。 结构参数，这是在设计模型阶段要确定的，决定了网络的基本结构，如网络共有几层，每层各有多少各神经元，该层的属性是卷积层还是下采样层还是激活层。 训练超参数，就是在网络的训练阶段，控制训练采用的学习算法，学习步长，学习率，迭代次数等参数。 可学习参数，就是通过训练数据最终获得的网络权重、偏置等参数。 3 卷积神经网络卷积神经网络有三个重要的特点：局部互连、权值共享和下采样。那为什么可以采用这三个特点呢，以及采用了以后有何优点呢，接下来一一说明。 普通的神经网络，一层中的任意一个神经元都要和它前一层中的每一个神经元连接。这样的做法，对于一张图像而言，连接数实在是太多了，计算量太大，所以要想办法减少连接数。我们人在看外部世界的时候，对于视线中的某一样物体，并不一定要把视线中的所有物体扫一遍之后才确定当前这个物体是啥，而且和物体所在位置无关，所以说局部的物体与距离远的像素之间的相关性比较低，可以暂时不计较，仅仅计算局部区域中相关性强的部分来获得特征，在此之后，在更深的层里将局部特征综合起来获得全局的特征，由此，计算量就相对小多了。（这其中将局部特征组合获得全局特征的思想是源于视觉系统的层级结构） 要谈权值共享，就要先知道卷积神经网络的卷积操作是在干什么。卷积核是一个有权值的几乘几的小块，将卷积核放到图像上，对应重合的值相乘再相加，就是一个卷积操作，把卷积核在整幅图上滑动一遍，就得到了一张特征图，这个过程可以看成是滤波，滤得的结果就是特征，特征的性质由卷积核决定。那回到神经网络的结构上来，原图的像素对应于输入的神经元，特征图中的像素对应于下一层中的某个神经元，每个特征图中的像素与原图的局部几个像素点相连，连接线上的权值就是对应卷积核上的对应值。从滤波的角度，要获得某个特征，就要用某个特定的滤波器处理整幅图，对应于网络结构，就是特征图上不同神经元连接到输入的的权值是相同的，即卷积核只有一个，对应一个特征图。如此，神经网络的参数又大大减少了。（要增加特征个数，就要增加卷积核的个数） 下采样直观地看，就是减少数据量。当然，这样做可以改善数据量大（数据量远多于参数，相当于是超定方程）而产生的过拟合现象。 综上，此三个特点都是极大地减少了运算的数据量。","tags":[{"name":"卷积神经网络","slug":"卷积神经网络","permalink":"https://blackdusts.github.io/tags/卷积神经网络/"},{"name":"深度学习","slug":"深度学习","permalink":"https://blackdusts.github.io/tags/深度学习/"},{"name":"浅层学习","slug":"浅层学习","permalink":"https://blackdusts.github.io/tags/浅层学习/"}]},{"title":"开学的第一周的流水帐","date":"2017-02-25T05:20:57.000Z","path":"2017/02/25/开学的第一周的流水帐/","text":"写篇流水账一样的日记，可却想不出啥好听的名字，那就随便一点吧。前日看到一首打油之作，似是赞眼见之物远胜所闻，不错，暂且记之： 昔日曾见此湖图，不信人间有此湖；今日打从湖上过，画工还欠费功夫。 从因果到相关这该是一个关于思考的问题，源头是看了吴军老师写的新作《智能时代》，不过老实说，我觉得写得和之前的作品相差太大。这书唯一留给我思考的就只有关于因果和相关这两个词了。 我其实不是太能够区分这两个词，只是觉得因果是有先后次序关系的，而且两者之间的关系也是比较明确的，并且暗含了必然的意味；而相关的话就是，有关系，但是说不清怎样一个关系，但关联却存在。 如果事情是因果关系的，那么追寻到事件的因以后也就清楚了，好解决了；但如果事情只是相关，那就难说，获得的信息量相对就少。在生活中，其实有很多事情的前因后果并不能弄得清，很多时候仅仅是偶然造就的结果，也只是有关联而已。可是我们在思考的时候却很容易的把仅仅相关的事件用因果把他们联系起来，这样导出的一种必然性却作为了以后看问题的经验教训。 用因果的观点来看问题可以简化问题，方便思考的过程，去掉很多不必要的麻烦，也确实可以解决很多问题。但是，认识到事件的相关性质也是不可少的，把思维从因果转向相关也不是那么简单，固化的思维模式阻碍了这个过程。 理性和感情天下熙熙，皆为利来；天下嚷嚷，皆为利往。我在此前的好长一段时间里，都坚定地认为“利”是驱动人生前进的动力，唯一的，既有物质利，又有精神利。（当然现在也是这样觉得，因为我把感情归为精神利里了）而且在分析问题的时候，也觉得可以用“利”一字概括所有的动机，万事万物变化的主因都是实现”利”的最大化，并仅仅将不利己的行为看成是愚蠢导致的。 我的一种简单的看法是这样的，感情是“利”在社会环境下，从互利共存的契约中衍生出的不利或共利行为。在社会化的环境中生存，仅仅两眼盯着利肯定不行阿，共同生活圈中的人争夺相交的资源会产生威胁和安全性。为求极大化利益，寻求个体组团共存共享以应对外部环境和其他个体，这时团队内就需要“感情”这样一种东西来确保各自间不冲突，这时的“感情”所对应的就是信任，责任，友情等等之类的人类感情。 现在好一些了，看问题也没这么极端了，还是相信世间有真情的。之前的想法是把人给社会化了，认为人只是思考计算的机器；现在则是增加了动物化，认为感情的由来是动物的一种体现，是属于动物的一种本能。之前的看法就是把感情看作是利益下的产物，现在把他看作是人与生俱来的属性。很难说我以后会怎么看待这个问题，应该会有更好更温暖的认识才好，不然自己也要看扁自己了。 问道和求解我长期处在这样的两种状态： 寻找问题（遇到问题）～寻找答案～找不到答案～害怕问题～逃避问题～空虚迷茫～寻找问题 寻找问题～寻找答案～找到答案～寻找问题 就现阶段看来，处在第一阶段的时期较多，第二阶段的较少，由此对待生活的态度上是相对有些消极的。 我的期望是可以生活在第二个阶段，可是这就需要我个人的性格、习惯、态度等发生较大的改变了。 起点导致偏好有个好的起点，好的开始真的很重要。在数学的角度上看来，一个初值的选取对整体的影响是很大的。从人的认知上看，一开始的接触，就在人脑中产生了思考的偏好，态度的偏好，也许一生的方向就在这一刻给限定在了某个范围。","tags":[{"name":"理性","slug":"理性","permalink":"https://blackdusts.github.io/tags/理性/"},{"name":"感情","slug":"感情","permalink":"https://blackdusts.github.io/tags/感情/"},{"name":"迷茫","slug":"迷茫","permalink":"https://blackdusts.github.io/tags/迷茫/"},{"name":"起点","slug":"起点","permalink":"https://blackdusts.github.io/tags/起点/"}]},{"title":"23岁的眼观看生活","date":"2017-02-12T09:29:35.000Z","path":"2017/02/12/23岁的眼观看生活/","text":"前言我觉得从一家人生活的这个小圈子里，可以让我在很多个方面看到教训和以后奋斗的方向，也能更加清楚我所谓的人生的意义。 我的家人这个问题其他不太好说，可我又很想抱怨几句。我觉得我很多时候一直以来对待家人的态度上远不如同学朋友甚至陌生人的客气和顺畅。在我看来，在我尝试和家人沟通的时候，家人多数情况都是不讲理的；家人看待我的地位也一直是小孩，所以道理在他们面前讲不通，拿来回应的多是“我这么做都是为了你好”，“你以后会知道我们的苦心的”类似之语。 可能是时代观念或是习惯了这种对待家人的传统，我在和我爸，我姐和我妈交流时，没有一个平等的机会，而我又一直觉得自己有理，不想妥协，所以我经常会和他们争。和我爸争时，他总是用沉默或是大嗓门回应，感觉是以无言来蔑视你，忽略你，或是我嗓门大我就有理的架子；在和我姐争辩的时候，我姐有时候会听，可有时候表现的又很任性，以“我就是不爽咋样”，显得很是情绪化，而且受我爸妈的影响较深，有些观念和我爸妈如出一辙；我觉得还是我妈和我可以更好的沟通，也肯听我说，只是在很多方面她更相信其他人的经验之谈。 我说过很过分的话，“不管以后我家的经济条件怎么变，我家过的也只能是穷人的日子”，“思想穷祸三代”。很明显的例子，家里的电器，洗衣机和空调基本上是摆设，用来扩充门面的，不用，为了省电，大冬天的，起得老早就为去池塘边洗衣服，水都舍不得用家里的。其实节俭的习惯自然是好的，可是这并不是节俭，这一系列的”节俭”行为散布的是低效率的穷人思维，就是丢西瓜捡芝麻，可是对于长短利益这样的道理在我爸妈面前是很难讲清楚。他们只记得曾经穷过的日子，把“节俭”刻到了骨子里。 我爸妈这样的思想观念其实并无害，但是我觉得，这样的日子是不开心的，他们没有自己的追求，不知道年复一年日复一日的日子究竟为了什么，每月的薪水，还是以此换来的商品呢，我没有看出来。 我个人也多次陷入生命意义这样伟大的话题中，深思之后也没有什么大的计划，但是却清楚不能再走爸妈的老路，要活出自己更希望的更喜欢的那样。 教育我一直把教育作为解决家国大事（一辈子的成长大计）的唯一途径，当然，我所说的教育不是仅仅指课堂教育，更有个人的自我教育（可以理解为个人学习）。人要学会去改变，通过教育，教育要达到两个目的，新的认识和有效的思考，可能这也是我对自己的要求吧。 我觉得教育是分三个阶段的，与我妈同一时代的人，温饱是大事，没多少的机会来识文断字，所谓的教育不过就是奔着更好的生活，凭着自己的经验和天赋向生活学。没有文字的帮助，这个阶段的人多是靠着运气、胆量和磨砺得来的，苦得很，认知极其有限，这是时代的悲剧；下一个阶段的人，就是我的同辈人了，能够识文断字，加减乘除，为获得进一步提升和改变提供了基础，无奈大多数的人却仅仅停留在这个阶段，变得和第一阶段的人一样，仅仅在用生活来提升自己，也不是说这样不好，由生活得来的经验是很深刻的，但第二阶段的人却并没有具备如此思考和反思的能力，只是顺应大势一同前行；所以，我希望的第三个阶段是可以是实现个人的存在，这就需要新的认知和不断的改变。 爱情找一个人，组建一个家庭，然后开始柴米油盐的日子。我个人可能是故事看多了，心冷了，对于那些心动的故事是不相信的。今年23岁了，对于另一半也曾有很多的幻想和期待，可是一直没有行动，骨子里的卑贱和谨慎阻止了我，可能是我想的太多了吧，所以理想对象的要求也就数不清了。 谈谈两个人要在一起的前因后果，为什么两个人要在一起组建新家庭。为了保障生命晚年的生活，需要有后代的帮助，繁殖就成了需要，这就必不可少的需要有另一半的协助。那如果不担心晚年的生活，一个人也能生活呢，那么是害怕孤独所以需要另一个人的陪伴。那如果也不担心孤独的问题呢，就可以一个人终老了吗，或许吧，留待后日思考。 生活中的大多数人，都是在社会的要求下，默认选择了需要后代和害怕孤单，在岁月的催促下，年龄一到就开始配对（请允许我这么说，因为我觉得大多数人只是因为该结婚而结婚，兴许日后有一天，我也会去参加配对）。 单独的个体是一个利益体，一个家庭也是一个利益体。当两个人在人潮的碰撞中相遇，那这个家庭的利益体就会剥夺他们个人的利益转为共同的利益，幸运的家庭的这个过程中利益是增长的，而同床异梦的二人组合却使得家庭的利益在个体的冲突中不断消耗。当然，有很多的人都不会考虑这些，很多的人会在为了家庭而妥协，但是这样付出的代价也是不小的，有时候甚至是陪伴一生的过程。 我为什么说怎么些没用的呢，我也不是很清楚。我又是怎么看待二人生活的呢，除了共通的兴趣交集，还得有一边端茶洗碗，一边拖地抹窗的配合和协作。 （2月24日补充） 要是瞎扯淡这些玩样给未来另一半看到了，那我就真的注孤了。满脑子利益俩字那还怎么过日子，自然是不合理的，可现实毕竟是存在的，如何取舍感情和理性，那就要靠本人日后的修行了。 另一个关于感情的观念就是，生活中见到的很多的都是一方看到另一方，觉得合适，就去追，然后对方觉得合适就在一起了。关于这个“追”字的理解，我觉得最好是自然而然地在一起，这样双方的关系才会比较平等。如果一开始就是高低不等的地位，因为感情冲动走到一起，日后也少不得磕磕绊绊，总会有一方要委屈，去迎合才能正常生活，这样的日子，怕是有些累的。","tags":[{"name":"生活","slug":"生活","permalink":"https://blackdusts.github.io/tags/生活/"},{"name":"世界观","slug":"世界观","permalink":"https://blackdusts.github.io/tags/世界观/"},{"name":"意义","slug":"意义","permalink":"https://blackdusts.github.io/tags/意义/"},{"name":"利益","slug":"利益","permalink":"https://blackdusts.github.io/tags/利益/"}]},{"title":"浅谈社会这个概念","date":"2017-02-08T13:24:16.000Z","path":"2017/02/08/浅谈社会这个概念/","text":"前言我在自家的地里摘了个西瓜，路上遇到一个歹人拦路抢劫，他两刀把我砍死了并夺走我的西瓜。警察抓走了歹徒并将歹徒判刑。 上面是我瞎说的话，可是却有好几个问题是值得思考的。为什么我可以在自家的地里摘西瓜，为什么歹徒能抢我的瓜，为什么警察可以抓走歹徒，歹徒为什么会被判刑。看到这里，是不是感觉有点傻逼对上二愣子的感觉，想骂神经病阿，嘿嘿，多问为什么总是好的，被当作傻逼是学习过程中要扮演的一个角色阿。 一个偶然的机会看到了卢梭的《社会契约论》，就买了一本来看看，现在看了一部分，觉得还是从中学到了一些东西的，因此就把所学所想写一写，做个记录吧。 卢梭要说书，总要说说作者吧，卢梭大名鼎鼎的，中学时期就知晓了此人乃是法国大革命时期的一个思想家，牛人。在看了社会契约论这本书以后，对他就更加佩服了，觉得他有思想，很厉害。当我去翻《西方哲学史》这本书中卢梭的篇章时，发现罗素对他的描写可是一点都不客气，要是不提及卢梭的这些个著作，光看他的生活和为人，那就小人一个，卑鄙无耻都形容不了。也许罗素这个后来人是这样说话的口气，也是用这样的眼光看待古人的，我本人对卢梭还是佩服崇拜得很的呀。不扯其他的了，回到书上来，卢梭的社会契约论又叫做政治权利的原理，从字面就可窥得其中要义。 平等、自由和社会这是一个和社会的起源相关的话题，什么是平等，什么是自由。书从一开头就直接点明了人生来是自由的，且众生平等，这些观点是直接与奴隶制、等级制对立的。人一生下来确实是自由的，这种叫做自然的自由，但并不是平等，个体之间存在先天的差异是不可争辩的事实。在一个这样自然自由的环境下，由先天不平等的现状就带来了弱肉强食，强力至上的状态。在这样的一种状态下，人人自由，却要在强力下屈服，也就是先天的不平等导致了自然自由的脆落。 人类历史上这样的状态兴许经历了一段时期，随着智力的发展，人开始学会合作，聚集在一起组成一个集体，并制定规制，导致社会的出现。自然自由的人为了改变先天不平等带来的威胁，获得一个更加有利于生存发展的环境，于是便以放弃自然自由为代价来获取新的社会规则下的社会自由，并且可以在社会规则的约束下避免了因为先天不平等带来的威胁。 国家和政府为了维护大家的共同利益，保障组成社会的成员的权利，就要求每个成员都接受社会契约中的规定。这样，成员们舍弃个人的自由和利益以维护社会的契约生效，而社会契约给成员以社会的自由和权利。一旦个体违背契约，就会损害社会的利益，导致成员的权利受损，因此违规的个体就要被处罚以保护那些维护社会契约成员的利益。这些都是社会成员默认接受并且需要遵守的约定。 国家的含义可以是上述社会契约和社会成员的一个总和，是一个没有确切实体的概念。所谓的爱国也就是在执行契约规定的职责，并且在极端条件下为了维护契约而献出个人的生命的行为。 政府是一个国家或者社会的契约的执行机构，并不代表国家，只是由国家授权给政府，让政府有权执行和维护契约，确保契约在社会成员中的执行和维护。 由此，对于个人与国家，政府之间应该是一种怎么的关系，我不再细说。","tags":[{"name":"卢梭","slug":"卢梭","permalink":"https://blackdusts.github.io/tags/卢梭/"},{"name":"社会","slug":"社会","permalink":"https://blackdusts.github.io/tags/社会/"},{"name":"契约","slug":"契约","permalink":"https://blackdusts.github.io/tags/契约/"},{"name":"自由","slug":"自由","permalink":"https://blackdusts.github.io/tags/自由/"},{"name":"政府","slug":"政府","permalink":"https://blackdusts.github.io/tags/政府/"}]},{"title":"caffe安装辛酸史简记","date":"2017-02-07T01:06:17.000Z","path":"2017/02/07/caffe安装辛酸史简记/","text":"前言caffe是一个用卷积神经网络来做图像识别的好框架，我近来要学习图像检测和图像识别，就想着要装一下这个利器以便于学习和研究。万事开头难阿，安装配置caffe可花了我不少时间，其中坎坷，不尝试一下是不会明白的。 没有一个过来人的指点，就少不了磕磕绊绊，一来是网上的资料虽然丰富，但硬件配置和软件版本却是各不相同，想照着人家的教程一步步跟着做也是对错难料阿；二来呢是网上的资料都只是说起然而未解释何以然，出了问题不知该如何解决，看到error提示也不知其理，故现将头几日所遇之坑做一记录，已备后日自己或是他人能避而幸免。 不过，我可不是写安装的流程阿，只是将一些其中的问题点出来，所以本文适合在安装caffe之前看看，了解坑的位置，具体的操作在网上搜索即可。 与caffe相关的几个软件、包caffe是一个C++写的框架，如果不考虑加速，便捷开发，以及某些专用库的使用，仅仅是想跑一跑单纯的caffe的话是挺简单的，也会比较容易搭建；可是对于要做学习和研究的话，单纯的caffe还是受到了诸多的限制，比如对于大量的图片处理，计算量相当大，一台笔记本的CPU跑起来是很弱的。以我的笔记本配置，在单CPU模式下训练caffe例子中的MNIST，花了二十多分钟，而利用GPU跑的话，可以减一半的时间，用大概8分钟就够了，要是再有cuDNN这个加速库的话，那速度就该更快了，无奈我的GPU版本太low了，不支持cuDNN，可惜阿。 前面说的是运行速度的问题，再谈谈开发的问题，单纯的caffe是C++写的，有的是C++的接口，可以有命令行的操作界面，当然其中还有python和matlab的接口，可以用python和matlab开发，而且caffe的某些功能可能调用了matlab的库，以及OpenCV的库，所以有了这些外加的软件和库的帮助，用caffe学习会更加便利。当然这些是可选项，不安装也可以用caffe。 点坑指路运行模式首先要说的是关于硬件的问题，没有显卡的话就不需要废话了，直接单CPU模式即可，也不用安装CUDA和cuDNN这些个麻烦玩样。如果是有GPU的，那就可以用GPU加速了，可是也不要高兴的太早了，要是遇到类似我的GT630M这样的显卡，那也只能有GPU计算而不能用cuDNN加速。查看cuDNN的用户手册可以发现，要用cuDNN就需要兼容性3.0以上版本的GPU才能用，所以，害我把CUDA和cuDNN的多个版本一个个试过来都没用，是天生没这本事的玩样，再怎么折腾也是白搭。 由此可知，跑程序可以有三种情况：单CPU，GPU以及cuDNN三种，对应到caffe的配置文件，就需要确定解除哪几句话的注释。现在看看配置文件中的代码如下： # cuDNN acceleration switch (uncomment to build with cuDNN). # USE_CUDNN := 1 # CPU-only switch (uncomment to build without GPU support). # CPU_ONLY := 1 如果是单CPU模式，那么就把CPU_ONLY前面的#去掉，此时还不够，在‘/caffe目录/examples/某个实例’这个目录下的例子代码中找到solver.prototxt文件，在文件的最后，有如下代码： # solver mode: CPU or GPU solver_mode: GPU 每个这样的文件后，都要把solver_mode中的GPU改成CPU。 如果是GPU模式，那就不修改caffe配置文件中的这两项，如果是cuDNN模式就把USE_CUDNN前面的#去掉。 编译问题在ubuntu系统中，经常要用到make命令，用来编译库文件。在下载安装CUDA或是caffe的过程中，都少不了要用make命令，网上的很多教程也都讲了，要编译得快一点，就用命令make -j，可是我每次跑这个命令，电脑都要死机，因为-j是让cpu进程尽可能利用，并发运行，可是也许是造成思索了，每次都要死机。我在网上搜索了一下，发现也有人遇到类似的问题，这可能也cpu型号以及make命令有关系，下次要用make编译快一点，就用make -j8命令，至于原因嘛，我也是不太清楚。 在修改了配置文件需要重新编译时，输入make all -j8 会报错显示找不到命令，只是就需要现make clean一下，将以前的先给清了再重新编译。 其他小问题下载matlab花了我好几天的功夫，一来是因为大，二来是文件传输易出错。刚开始我是在ubuntu上用浏览器直接下载的，可是总会在下到一半的时候出错，可能是文件太大，用浏览器不行，那我就换用uget来下载，可是结果依旧如此，总会停在半道上，无奈只好先到windows上先用迅雷下好，再传到ubuntu上，结果，复制的过程却出错了，不知道是不是因为大文件在不同的文件系统间传输有其他要求，最后用windows上的百度云下好之后传到ubuntu上这才结束，嗨。 在配置文件Makefile.config中，一定要看清楚哪些是取消注释就可以启动功能，哪些是注释掉才启动功能的，要是一时看错，那以后的错误就有得改了。 注：在跑例子程序的时候要注意了，很多的.sh文件在运行的时候是要在caffe的根目录下跑的，要是跑到example的目录里面运行.sh文件就会跑错显示找不到什么文件或是目录，因为那些的.sh文件中写的命令以当前目录为caffe根目录写的。 总结事后已有几日，现今回想，好多问题其实都是一点就通的，无奈无人指路，自己也懵懂随处乱撞，才至如此，但凡有问题，总还是该细思的，希望我的木脑袋别总僵着。其他问题，日后出现再来补记。","tags":[{"name":"caffe","slug":"caffe","permalink":"https://blackdusts.github.io/tags/caffe/"},{"name":"安装教程","slug":"安装教程","permalink":"https://blackdusts.github.io/tags/安装教程/"},{"name":"CUDA","slug":"CUDA","permalink":"https://blackdusts.github.io/tags/CUDA/"},{"name":"GPU","slug":"GPU","permalink":"https://blackdusts.github.io/tags/GPU/"}]},{"title":"markdown语法简介","date":"2017-01-26T13:47:24.000Z","path":"2017/01/26/markdown语法简介/","text":"目录 1 前言 2 markdown的简单语法和实例 2.1 段落,标题和字体 2.2 列表，代码区块和引用 2.3 图片和链接 2.4 其他 3 总结 1 前言这是我自己手写的第一篇博文，所以说说我创建该博客的目的和想法。一方面，我是要搭建独立的博客，觉得这样做有趣，挺好玩的；另一方面，我想借这个机会让自己养成写字的习惯，不管有什么想法，把她写下来，记下来，是一个好的思考和学习的过程。 本篇博客就先记录一下关于markdown这种标记语言的一些基本语法，我先写一点简单的，常用的，也好在以后书写的过程中可以查阅，回顾和学习。 2 markdown的简单语法和实例2.1 段落,标题和字体2.1.1 段落在markdown中，换行符不能作为两个段落的分割符号，而是要用一个空行来表示两个段落的分开。下面举一个简单的例子： 下面是错误的做法和结果： 这是第一段话，在这句话的句号后敲换行，再写第二段话，中间没有空行。这是第二段话，看到的结果是这句话接在第一段话的后面，两段没有分开。 下面是正确的做法和结果： 这是第一段话，在这句话的句号后敲换行，再写第二段话，中间没有空行。 这是第二段话，看到的结果是这句话接在第一段话的后面，两段没有分开。 2.1.2 标题标题的写法有两种，这里就只说其中的一种，其他的需要的时候再去网络上搜索吧。语法规则是，井号”#”后面先加空格，然后写标题名就好了，标题有多级，一个”#”表示最高级，依次增加井号的个数，级别变低，下面举几个简单的例子： 书写的语句是： ###### 六级标题 ##### 五级标题 #### 四级标题 得到的结果是： 六级标题五级标题四级标题2.1.2 字体这里只介绍加粗，斜体和删除线三种基本的变化，其他的网上找吧。语法规则是，几个星号”*“中间夹上文字，直接看几个简单的例子吧： 书写的语句： *斜体* 或 _斜体_ **粗体** 或 __粗体__ ***加粗斜体*** 或 ___加粗斜体___ ~~删除线~~ 得到的结果是： 斜体 或 斜体 粗体 或 粗体 加粗斜体 或 加粗斜体 删除线 2.2 列表，代码区块和引用2.2.1 列表列表分为有序列表和无序列表，在’-‘或’*‘后面加一个空格再加文字，现在举几个简单的无序列表的例子： 书写的语句： - 表第一行 - 表第二行 或 + 表第一行 + 表第二行 或 * 表第一行 * 表第二行 得到的结果是： 表第一行 表第二行 表第一行 表第二行 表第一行 表第二行 接下来是有序列表的例子： 书写的语句是： 1. 表的第一行 2. 表的第二行 得到的结果是： 表的第一行 表的第二行 2.2.2 代码区块和引用引用他人的文字，只要在文字的前面是‘&gt;’就好了，如果引用的是代码，就用”`“,注意这里的‘`’是反引号把代码包裹住就好了，举例如下： 书写的语句： &gt;这是引用的文字部分 `这里引用的是单行的代码` 12int i = 0; //这是引用的代码float j = 1.0; //引用的是多行代码 得到的结果是： 这是引用的文字部分 这里引用的是单行的代码 12int i = 0; //这是引用的代码float j = 1.0; //引用的是多行代码 2.3 图片和链接链接用中括号和圆括号插入，形式为：[文字描述](链接地址),图片在链接的表述倩加一个！就好，形式为：！[文字描述](图片地址)，下面举个简单的例子： 书写的语法为： [github](https://github.com/) ![我的头像](/images/me.jpg) 得到的结果： github 2.4 其他简述一下分割线和删除线，在一行中用三个以上的星号、减号和底线来实现，下面举例。 书写的语句： ---- **** ~~要删除的字~~ 得到的结果： 要删除的字 3 总结第一次用markdown写这么多的字，感觉还是不容易的，中间断断续续写了好几天，以后还需要好好坚持才做好。","tags":[{"name":"markdown","slug":"markdown","permalink":"https://blackdusts.github.io/tags/markdown/"},{"name":"语法","slug":"语法","permalink":"https://blackdusts.github.io/tags/语法/"},{"name":"实例","slug":"实例","permalink":"https://blackdusts.github.io/tags/实例/"}]},{"title":"闲话一二","date":"2017-01-25T09:23:25.000Z","path":"2017/01/25/闲话一二/","text":"前言本文就主要介绍一下与本博客的相关的一些东西。 关于本人学生一枚，单身汪一只，浙江人，现在武汉求学，通信专业，联系方式（163邮箱）：ludongcheng1994@163.com 关于博客只要是觉得用这种形式的博客比较逼格更高，我会在这里写一些生活，学习方面的东西，类似日记和笔记的功能。 该博客是使用了github page的功能，本地写好文章后生成静态页面放到github上。博客采用基于Node.js的Hexo框架搭建，博客的主题theme用的是yilia（其实我也蛮喜欢Next主题的）。 关于内容文章的目录我分了三类，业术是关于我课业上的一些知识总结和笔记，也就是专业相关的内容；天道就是我看了一些杂七杂八的书之后得到的一些感想，可以当成读书笔记；扯淡最好理解了，就是给我记录流水帐用的。","tags":[{"name":"介绍","slug":"介绍","permalink":"https://blackdusts.github.io/tags/介绍/"},{"name":"闲话","slug":"闲话","permalink":"https://blackdusts.github.io/tags/闲话/"}]},{"title":"Hello World","date":"2017-01-25T05:47:56.000Z","path":"2017/01/25/hello-world/","text":"这是hexo自带的页面，我就仅仅在后面稍作修改吧。 Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server 可简写为1$ hexo s More info: Server Generate static files1$ hexo generate 可简写为1$ hexo g 清除之前的静态文件 1$ hexo clean More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 注1：顺便提几句其他的，关于title，data，tag以及catagery的书写，要注意冒号后面应该留有空格，不然就会报错。 注2：在上传到github后，页面不一定立马就能更新，要等一会儿，而且会出现只更新了部分页面的情况，所以，不要急，等一下之后再看看可能就好了。 注3：用&lt;!–more–&gt;这个符号来对长的文章进行缩略显示，这是hexo推荐的写法。 注4：关于图像的添加办法，操作步骤为： 把配置文件_config.yml 里的post_asset_folder这个选项设置为true 在hexo目录下执行这样一句话npm install hexo-asset-image –save ,用来下载上传图片的插件 运行hexo n “xxxx”来生成md博文时，文件夹内除了xxxx.md文件还有一个同名的文件夹，用来存放图片 在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，再在markdown文件中对应的位置输入：![你想输入的替代文字](xxxx/图片名.jpg)","tags":[{"name":"hexo","slug":"hexo","permalink":"https://blackdusts.github.io/tags/hexo/"},{"name":"入门","slug":"入门","permalink":"https://blackdusts.github.io/tags/入门/"}]}]